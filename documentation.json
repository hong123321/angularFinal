{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AdminService",
            "id": "injectable-AdminService-f72c208d5f89abb8d4bba9e501b315ef5eeaa8d1bf26fdb6347221fe2e016cc7ca13a0b0e2bbc3dc1b7aa466bc4b5b8084cac8ad3d658f5a97f36562e04a8353",
            "file": "src/app/layout/service/admin.service.ts",
            "properties": [
                {
                    "name": "addUserAPI",
                    "defaultValue": "'http://localhost/angular/register.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "apiProcess",
                    "defaultValue": "'http://localhost:3000/process'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "apiProduct",
                    "defaultValue": "'http://localhost:3000/popular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "apiUpload",
                    "defaultValue": "'http://localhost/angular/upload.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "apiUser",
                    "defaultValue": "'https://61d7f81be6744d0017ba8879.mockapi.io/user/user'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "DeleteUserAPI",
                    "defaultValue": "'http://localhost/angular/deleteUser.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "GetUserAPI",
                    "defaultValue": "'http://localhost/angular/getUserById.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "httpOptions",
                    "defaultValue": "{\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "newsAPI",
                    "defaultValue": "'http://localhost:3000/news'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "updatePassAPI",
                    "defaultValue": "'http://localhost/angular/updatepassword.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "UpdateUserAPI",
                    "defaultValue": "'http://localhost/angular/updateUser.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "UserAPI",
                    "defaultValue": "'http://localhost/angular/user.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOrderProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getOrderProductById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "orderProduct",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postNews",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updatePass",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\n  };\n  apiProduct = 'http://localhost:3000/popular';\n  apiUser = 'https://61d7f81be6744d0017ba8879.mockapi.io/user/user';\n  UserAPI = 'http://localhost/angular/user.php';\n  addUserAPI = 'http://localhost/angular/register.php';\n  DeleteUserAPI = 'http://localhost/angular/deleteUser.php';\n  GetUserAPI = 'http://localhost/angular/getUserById.php';\n  UpdateUserAPI = 'http://localhost/angular/updateUser.php';\n  updatePassAPI = 'http://localhost/angular/updatepassword.php';\n  apiProcess = 'http://localhost:3000/process';\n  apiUpload = 'http://localhost/angular/upload.php';\n  newsAPI = 'http://localhost:3000/news';\n  constructor(private http: HttpClient) { }\n  getUser(): Observable<any>{\n    return this.http.get<any>(this.UserAPI);\n  }\n  deleteUser(id: number): Observable<any>{\n    return this.http.delete(`${this.DeleteUserAPI}?id=${id}`);\n  }\n  getUserById(id: number): Observable<any>{\n    return this.http.get<any>(`${this.GetUserAPI}?id=${id}`);\n  }\n  updateUser(e: any, id: number): Observable<any>{\n    return this.http.put(`${this.UpdateUserAPI}?id=${id}`, e, this.httpOptions);\n  }\n  updatePass(e: any, id: number): Observable<any>{\n    return this.http.put(`${this.updatePassAPI}?id=${id}`, e, this.httpOptions);\n  }\n  addUser(e: any): Observable<any>{\n    return this.http.post<any>(`${this.addUserAPI}`, e, this.httpOptions);\n  }\n  getProduct(): Observable<any>{\n    return this.http.get<any>(this.apiProduct);\n  }\n  orderProduct(e: any): Observable<any>{\n    return this.http.post<any>(this.apiProcess, e, this.httpOptions);\n  }\n  getOrderProduct(): Observable<any>{\n    return this.http.get<any>(this.apiProcess);\n  }\n  getOrderProductById(id: number): Observable<any>{\n    return this.http.get<any>(`${this.apiProduct}/${id}`);\n  }\n  addProduct(e: any): Observable<any>{\n    return this.http.post<any>(`${this.apiProduct}`, e, this.httpOptions);\n  }\n  postNews(e: any): Observable<any>{\n    return this.http.post<any>(`${this.newsAPI}`, e, this.httpOptions);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "JwtService",
            "id": "injectable-JwtService-3e249036bd3619892becb222fd69c20eaba1c7dae651fc06887ee982c8fa959881b5aad770cc4ebb37ddfd206336d2bb98164c041a8576146e35552a1b3f667d",
            "file": "src/app/shared/service/jwt.service.ts",
            "properties": [
                {
                    "name": "httpOptions",
                    "defaultValue": "{\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "user",
                    "defaultValue": "'http://localhost/angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [
                {
                    "name": "getTokenInLoCal",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTokenInLoCalofAdmin",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggednIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggednIn_admin",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout_admin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\r\n  };\r\n  // api_Token = 'https://api.themoviedb.org/3/authentication/token/new?api_key=7212593b9b213b8a71376853e9e4f259';\r\n  // api_login = 'https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=7212593b9b213b8a71376853e9e4f259';\r\n  user = 'http://localhost/angular';\r\n  username: string;\r\n  token: any;\r\n  constructor(private httpClient: HttpClient, private myRoute: Router) { }\r\n  // getToken():Observable<any>{\r\n  //   return this.httpClient.get<any>(this.api_Token)\r\n  // }\r\n  login(e: any): Observable<any> {\r\n    this.username = e.name;\r\n    return this.httpClient.post<any>(this.user + '/login.php', e).pipe(\r\n      tap(res => {\r\n        res.forEach(el => {\r\n          if (el.username === 'admin' && el.password === '123456') {\r\n            localStorage.setItem('token_admin', el.id);\r\n          } else {\r\n            localStorage.setItem('token', el.id);\r\n          }\r\n        }\r\n        )        // if (res.length > 0) {\r\n        //   res.forEach(element => {\r\n        //     localStorage.setItem('token', element.id);\r\n        //   });\r\n        // }\r\n      }));\r\n  }\r\n  register(e: any): Observable<any> {\r\n    return this.httpClient.post<any>(this.user + '/register.php', e).pipe(\r\n      tap(res => {\r\n        console.log(res);\r\n      })\r\n    );\r\n  }\r\n  getTokenInLoCal() {\r\n    return localStorage.getItem('token');\r\n  }\r\n  getTokenInLoCalofAdmin() {\r\n    return localStorage.getItem('token_admin');\r\n  }\r\n  isLoggednIn() {\r\n    return this.getTokenInLoCal() !== null;\r\n  }\r\n  isLoggednIn_admin() {\r\n    return this.getTokenInLoCalofAdmin() !== null;\r\n  }\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.myRoute.navigate(['login']);\r\n  }\r\n  logout_admin() {\r\n    localStorage.removeItem('token_admin');\r\n    this.myRoute.navigate(['login']);\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "myRoute",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "myRoute",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductService",
            "id": "injectable-ProductService-89e7bc9af681e421217ffc9f7ab522a74bc86b46ea652eb0defdcbdf549b02cd62b75d4707fcaf3074c8cc3178d65ef2ca2506394977a9858f2967bff828d795",
            "file": "src/app/layout/service/product.service.ts",
            "properties": [
                {
                    "name": "apiPopular",
                    "defaultValue": "'http://localhost:4545/stubs'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "apiProduct",
                    "defaultValue": "'http://localhost:3000/popular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "cartAPI",
                    "defaultValue": "'http://localhost:3000/cart'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "changeAvtAPI",
                    "defaultValue": "'http://localhost/angular/changeImg.php'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "countValue",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "httpOptions",
                    "defaultValue": "{\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "newsAPI",
                    "defaultValue": "'http://localhost:3000/news'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "paymentComplete",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "paymentComplete$",
                    "defaultValue": "this.paymentComplete.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "ticketInformation",
                    "defaultValue": "{\r\n        name: '',\r\n        age: '',\r\n        phone: '',\r\n        address: '',\r\n        card_name: '',\r\n        card_number: '',\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "changeAvt",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "complete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dalateCartItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCartItem",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getListCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNews",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNewsById",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPopular",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTicketInformation",
                    "args": [],
                    "optional": false,
                    "returnType": "{ name: string; age: string; phone: string; address: string; card_name: string; card_number: string; }",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "notifyCountValue",
                    "args": [
                        {
                            "name": "number",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postListCart",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTicketInformation",
                    "args": [
                        {
                            "name": "ticketInformation",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ticketInformation",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\r\n  };\r\n  apiPopular = 'http://localhost:4545/stubs';\r\n  apiProduct = 'http://localhost:3000/popular';\r\n  cartAPI = 'http://localhost:3000/cart';\r\n  newsAPI = 'http://localhost:3000/news';\r\n  changeAvtAPI = 'http://localhost/angular/changeImg.php';\r\n  countValue: Subject<any> = new Subject();\r\n\r\n  ticketInformation = {\r\n        name: '',\r\n        age: '',\r\n        phone: '',\r\n        address: '',\r\n        card_name: '',\r\n        card_number: '',\r\n    };\r\nprivate paymentComplete = new Subject<any>();\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPopular(): Observable<any> {\r\n    return this.http.get<any>(this.apiPopular);\r\n  }\r\n  getListCart(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiProduct}/${id}`);\r\n  }\r\n  postListCart(value: any): Observable<any> {\r\n    return this.http.post<any>(this.cartAPI, value, this.httpOptions);\r\n  }\r\n  getCartItem(): Observable<any> {\r\n    return this.http.get<any>(this.cartAPI);\r\n  }\r\n  dalateCartItem(id: any): Observable<any> {\r\n    return this.http.delete(`${this.cartAPI}/${id}`);\r\n  }\r\n  getNews(): Observable<any> {\r\n    return this.http.get<any>(this.newsAPI);\r\n  }\r\n  getNewsById(id): Observable<any> {\r\n    return this.http.get<any>(`${this.newsAPI}/${id}`);\r\n  }\r\n  changeAvt(e: any, id: number): Observable<any>{\r\n    return this.http.put(`${this.changeAvtAPI}?id=${id}`, e , this.httpOptions);\r\n  }\r\n  paymentComplete$ = this.paymentComplete.asObservable();\r\n\r\n    getTicketInformation() {\r\n        return this.ticketInformation;\r\n    }\r\n\r\n    setTicketInformation(ticketInformation) {\r\n        this.ticketInformation = ticketInformation;\r\n    }\r\n\r\n    complete() {\r\n        this.paymentComplete.next(this.ticketInformation = {\r\n          name: '',\r\n          age: '',\r\n          phone: '',\r\n          address: '',\r\n          card_name: '',\r\n          card_number: '',\r\n      });\r\n    }\r\n  public get ValueFromChild(): Subject<any> {\r\n    return this.countValue;\r\n  }\r\n\r\n  public notifyCountValue(number) {\r\n    this.countValue.next(number);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "ValueFromChild": {
                    "name": "ValueFromChild",
                    "getSignature": {
                        "name": "ValueFromChild",
                        "type": "",
                        "returnType": "Subject<any>",
                        "line": 73
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthbackLogGuard",
            "id": "injectable-AuthbackLogGuard-06fa1663489a0e1a82e3a606447c7aafa3739880a931e02bd6d0a7d16111d93b4be12fb407cbb88aa2f141738b770f15ed908c6736a0eeb2fa22ae2585a4deba",
            "file": "src/app/shared/guard/authback-log.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from '../service/jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthbackLogGuard implements CanActivate {\r\n  constructor(\r\n    private auth: JwtService,\r\n    private myRoute: Router\r\n  ){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.auth.isLoggednIn() || !this.auth.isLoggednIn_admin()){\r\n      return true;\r\n    }else{\r\n      if(this.auth.isLoggednIn() ){\r\n        this.myRoute.navigate(['home']);\r\n        return false;\r\n      }else {\r\n        this.myRoute.navigate(['admin']);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "myRoute",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "myRoute",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-f5e663c8fa539d4bb67fecce03070688f34d488afefb097b2a43eaeacee9a36baa65e4441f0f1e3f30989254ab9b90127f73bcac6f5939f38dcca9723923e57f",
            "file": "src/app/shared/guard/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtService } from '../service/jwt.service';\n\n\n@Injectable({\n  providedIn: 'root',\n\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: JwtService,\n              private myRoute: Router){\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.auth.isLoggednIn() || this.auth.getTokenInLoCalofAdmin()){\n        return true;\n      }else{\n        this.myRoute.navigate(['login']);\n        return false;\n      }\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "myRoute",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "myRoute",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-d83b95cb897fd7f1ecc7216a31a9167598810a902c9c43ec11b6a93965548994186b900fe348e64bdf35a97b36d2fdb26731097dc1738e7f73bc67d2d432a47c",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AddProductComponent",
            "id": "component-AddProductComponent-76c901b1280b3d4aab1acccffc3e0ea1aa9e9624c98e9f2330c1b88b57a57f171d50a2cc73d5a79fe9aeed722bcbd9dcc75c5264d16830caf86a2e9a7f02ce47",
            "file": "src/app/layout/admin/add-product/add-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-product",
            "styleUrls": [
                "./add-product.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./add-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "httpOptions",
                    "defaultValue": "{\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\r\n      'Content-Type': 'application/JSON'\r\n    })\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selecttedFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "uploadedFiles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadimg",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\n\r\nimport { AdminService } from '../../service/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.css']\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n  uploadedFiles: any[] = [];\r\n  forms: FormGroup;\r\n  filename: string;\r\n  selecttedFile: File;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\r\n      'Content-Type': 'application/JSON'\r\n    })\r\n  };\r\n  \r\n  constructor(\r\n    private fn: FormBuilder,\r\n    private serviceAdmin: AdminService,\r\n    private http: HttpClient,\r\n    private confirm: ConfirmationService,\r\n    private mess: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forms = this.fn.group({\r\n      name: ['', [Validators.required]],\r\n      img: ['', [Validators.required]],\r\n      price: ['', [Validators.required]],\r\n      vote: ['', [Validators.required]],\r\n      view: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  uploadimg(e: any): void {\r\n    console.log(e);\r\n    this.selecttedFile = e.target.files[0];\r\n    const type = this.selecttedFile.type;\r\n    console.log(type);\r\n    if (!type.match(/image\\/*/)) {\r\n      this.mess.add({ key: 'c', severity: 'error', summary: 'Error', detail: 'AIncorrect format, please upload image file', life: 3000 });\r\n      this.forms.controls.img.reset();\r\n    }\r\n  }\r\n\r\n  onSubmit(e: any): void {\r\n    console.log(e);\r\n    this.confirm.confirm({\r\n      message: 'Are you sure you want to Add new Product?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        e.img = this.selecttedFile.name;\r\n        this.serviceAdmin.addProduct(e).subscribe({\r\n          next: c => {\r\n          },\r\n          error: error => {\r\n            this.mess.add({ key: 'c', severity: 'error', summary: 'Error', detail: 'Add Product Error', life: 3000 });\r\n          },\r\n          complete: () => {\r\n            this.mess.add({ key: 'c', severity: 'success', summary: 'Successful', detail: 'Add Product Complete', life: 3000 });\r\n          }\r\n        });\r\n        const uploadData = new FormData();\r\n        uploadData.append('myfile', this.selecttedFile, this.selecttedFile.name);\r\n        this.http.post('http://localhost:80/angular/upload.php', uploadData, {\r\n          reportProgress: true,\r\n          observe: 'events'\r\n        }).subscribe(\r\n          data => console.log(data)\r\n        );\r\n        //  setTimeout(() => {\r\n        //   this.serviceAdmin.getProduct().subscribe(data=>{\r\n        //     console.log(data);\r\n        //     data.forEach(el=>\r\n        //       this.http.post('http://localhost:2525/imposters/4545/stubs',el,this.httpOptions).subscribe(\r\n        //            data=>{\r\n        //              console.log(data)\r\n        //            },\r\n        //            err=>console.log(err)\r\n        //          )\r\n        //       )\r\n        //        })\r\n        //  }, 2000);\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-product.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serviceAdmin",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serviceAdmin",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit(forms.value)\">\r\n  <div class=\"form-group \">\r\n    <label for=\"\">Image</label>\r\n    <div class=\"p-inputgroup group p-col-12  \">\r\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-images\"></i></span>\r\n      <input type=\"file\" class=\"img\" pInputText (change)=\"uploadimg($event)\" formControlName=\"img\">\r\n    </div>\r\n    <label for=\"\">Price</label>\r\n    <div class=\"p-inputgroup group p-col-12\">\r\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-dollar\"></i></span>\r\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"name\" placeholder=\"name\">\r\n    </div>\r\n    <label for=\"\">Price</label>\r\n    <div class=\"p-inputgroup group p-col-12\">\r\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-dollar\"></i></span>\r\n      <input class=\"form-control\" id=\"img\" accept=\"image/*\" pInputText type=\"number\" formControlName=\"price\"\r\n        placeholder=\"Price\" />\r\n    </div>\r\n    <label for=\"\">Vote</label>\r\n    <div class=\"p-inputgroup group p-col-12\">\r\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-star\"></i></span>\r\n      <input class=\"form-control\" pInputText type=\"number\" name=\"name\" required formControlName=\"vote\"\r\n        placeholder=\"Vote\">\r\n    </div>\r\n    <label for=\"\">View</label>\r\n\r\n    <div class=\"p-inputgroup group p-col-12\">\r\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-key\"></i></span>\r\n      <input class=\"form-control\" pInputText type=\"number\" name=\"name\" required formControlName=\"view\"\r\n        placeholder=\"View\">\r\n    </div>\r\n  </div>\r\n  <p-button type=\"submit\" [disabled]=\"!forms.valid\">Add Product</p-button>\r\n  <p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>\r\n  <p-confirmDialog [baseZIndex]=\"10000\"></p-confirmDialog>\r\n</form>"
        },
        {
            "name": "AddUserComponent",
            "id": "component-AddUserComponent-22be38bf900d59233e812c2b2aad0c12a753db0547373c4b8f9167c0d84a510324f308c7b48a671e474d74e6369304f5f794695111d6c5f80ae05c09df79624d",
            "file": "src/app/layout/admin/list-user/add-user/add-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-user",
            "styleUrls": [
                "./add-user.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./add-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { AdminService } from 'src/app/layout/service/admin.service';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  forms: FormGroup;\n  constructor(\n    public ref: DynamicDialogRef,\n    private fn: FormBuilder,\n    private data: AdminService,\n    private confirms: ConfirmationService,\n    private mess: MessageService,\n    public config: DynamicDialogConfig) { }\n\n  ngOnInit(): void {\n    this.forms = this.fn.group({\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      age: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n\n  addUser(e: any): void {\n    const user = this.config.data.data;\n    this.confirms.confirm({\n      message: 'Are you sure you want to add the User?',\n      header: 'Add new User',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.data.addUser(e).subscribe(\n          data => {\n            this.mess.add({ key: 'c', severity: 'success', summary: 'Successful', detail: 'User Add Complete', life: 3000 });\n            user.push(e);\n            this.ref.close();\n          },\n          err => this.mess.add({ key: 'c', severity: 'error', summary: 'Successful', detail: 'User delete Fail', life: 5000 })\n        );\n      }\n    });\n  }\n  get name() { return this.forms.get('username'); }\n  get password() { return this.forms.get('password'); }\n  get email() { return this.forms.get('email'); }\n  get phone() { return this.forms.get('phone'); }\n  get age() { return this.forms.get('age'); }\n  get address() { return this.forms.get('address'); }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".group{\r\n  width: auto;\r\n}\r\n.validate{\r\n  color:red\r\n}\r\n.validate p {\r\n  font-size: small;\r\n  margin: 2px;\r\n}",
                    "styleUrl": "./add-user.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirms",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirms",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 52
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "",
                        "line": 53
                    }
                },
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "",
                        "line": 54
                    }
                },
                "phone": {
                    "name": "phone",
                    "getSignature": {
                        "name": "phone",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                },
                "age": {
                    "name": "age",
                    "getSignature": {
                        "name": "age",
                        "type": "",
                        "returnType": "",
                        "line": 56
                    }
                },
                "address": {
                    "name": "address",
                    "getSignature": {
                        "name": "address",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                }
            },
            "templateData": "<form [formGroup]=\"forms\" (ngSubmit)=\"addUser(forms.value)\">\n  <div class=\"form-group \" style=\" font-size:large\">\n    <label for=\"\">Name</label>\n    <div class=\"p-inputgroup group p-col-4  \">\n      <label class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></label>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"username\"\n        placeholder=\"Username\">\n    </div>\n    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n      <div *ngIf=\"name.errors?.required\" class=\"validate\">\n        <p>Name is required.</p>\n      </div>\n      <div *ngIf=\"name.errors?.minlength\" class=\"validate\">\n        <p> Name must be at least 6 characters long.</p>\n      </div>\n    </div>\n    <label for=\"\">Password</label>\n    <div class=\"p-inputgroup group p-col-4  \">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"password\"\n        placeholder=\"Password\">\n    </div>\n    <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n      <div *ngIf=\"password.errors?.required\" class=\"validate\">\n        <p>Password is required.</p>\n      </div>\n      <div *ngIf=\"password.errors?.minlength\" class=\"validate\">\n        <p>Password must be at least 6 characters long.</p>\n      </div>\n    </div>\n    <label for=\"\">Age</label>\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" pInputText type=\"number\" name=\"name\" required formControlName=\"age\" placeholder=\"Age\">\n    </div>\n    <div *ngIf=\"age.invalid && (age.dirty || age.touched)\">\n      <div *ngIf=\"age.errors?.required\" class=\"validate\">\n        <p> Age is required.</p>\n      </div>\n    </div>\n    <label for=\"\">Email</label>\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-phone\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"email\"\n        placeholder=\"Email\">\n    </div>\n    <div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n      <div *ngIf=\"email.errors?.required\" class=\"validate\">\n        <p> Email is required.</p>\n      </div>\n    </div>\n    <label for=\"\">Phone</label>\n\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-id-card\"></i></span>\n      <input class=\"form-control\" pInputText type=\"number\" name=\"name\" required formControlName=\"phone\"\n        placeholder=\"Phone\">\n    </div>\n    <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\">\n      <div *ngIf=\"phone.errors?.required\" class=\"validate\">\n        <p>Phone is required.</p>\n      </div>\n    </div>\n\n    <label for=\"\">Address</label>\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-id-card\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"address\"\n        placeholder=\"Address\">\n    </div>\n    <div *ngIf=\"address.invalid && (address.dirty || address.touched)\">\n      <div *ngIf=\"address.errors?.required\" class=\"validate\">\n        <p>Address is required.</p>\n      </div>\n    </div>\n  </div>\n  <p-button type=\"submit\" [disabled]=\"!forms.valid\">Add User</p-button>\n</form>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1c2453cd2284ba0816bf790791034740a47d7690ec0abd33053dcd0bbe04c4ff35a4c4dcec6b6dee6cbe4bbc46dca319109f23ee1711fda980eb0de1aa89abae",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'finalProject'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'finalProject';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n\n<lib-snow></lib-snow>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b2415841680b1b85747dee054be2bea12e273021c9110184998f6b8decce80f2c8b903a68cd614fc9b898bc8e3051628100cdf9d0f3e44bdb65d6308d5a29c78",
            "file": "src/stories/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor , 'border-radius': border, 'border':'1px solid' }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor , 'border-radius': border, 'border':'1px solid' }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default  class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n\n\n  /**\n   * Optional click handler\n   */\n   @Input()\n   border?: string;\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onClick = new EventEmitter<Event>();\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "CartComponent",
            "id": "component-CartComponent-364072b89f77056b4554f71f9972302aa7c31c1f412daa7b646119f091ff0d87bf129635cf647a53cf3e2290ab52b277fd47ed066641206929c012744d4de0b6",
            "file": "src/app/layout/user/product/cart/cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                },
                {
                    "name": "ConfirmationService"
                }
            ],
            "selector": "app-cart",
            "styleUrls": [
                "./cart.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./cart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "lengthItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "listCart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "buy",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "rowIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JwtService } from 'src/app/shared/service/jwt.service';\r\nimport { ProductService } from 'src/app/layout/service/product.service';\r\nimport { filter } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css'],\r\n  providers: [MessageService, ConfirmationService]\r\n})\r\nexport class CartComponent implements OnInit {\r\n  hide: any;\r\n  listCart: any[];\r\n  count = 0;\r\n  lengthItem: number;\r\n  constructor(\r\n    private ref: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n    private confSV: ConfirmationService,\r\n    private mess: MessageService,\r\n    private primengConfig: PrimeNGConfig,\r\n    private route: ActivatedRoute,\r\n    private routes: Router,\r\n    private auth: JwtService,\r\n    private productService: ProductService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.hide = this.auth.isLoggednIn();\r\n    this.primengConfig.ripple = true;\r\n    this.productService.getCartItem().subscribe(data => {\r\n      this.listCart = data.filter(el => el.idUser===localStorage.getItem('token'));\r\n      this.lengthItem = this.listCart.length;\r\n    });\r\n  }\r\n  delete(rowIndex: number, id: any) {\r\n    this.confSV.confirm({\r\n      message: 'Are you sure you want to delete the selected products?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.listCart = this.listCart.filter((input, i) => i !== rowIndex);\r\n        console.log(this.lengthItem -= 1);\r\n        this.productService.notifyCountValue(this.lengthItem);\r\n        this.productService.dalateCartItem(id).subscribe();\r\n        this.mess.add({ severity: 'success', key: 'c', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\r\n        if (this.listCart.length === 0) {\r\n          this.ref.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  buy(id: number) {\r\n    const idRD = id ;\r\n    const ids = Math.floor(id);\r\n    if (!this.hide) {\r\n      this.confSV.confirm({\r\n        message: 'You need login to buy product, Do you want Login ?',\r\n        header: 'Remind',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          this.ref.close();\r\n          this.routes.navigate(['order',{ id: ids, id_RD: idRD}]);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.ref.close();\r\n      this.routes.navigate(['order', { id: ids, id_RD: idRD }]);\r\n    }\r\n  }\r\n  login(){\r\n    this.ref.close();\r\n    this.routes.navigate(['/login']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./cart.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confSV",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confSV",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-table  [value]=\"listCart\"  *ngIf =\"lengthItem > 0\" >\r\n  <ng-template pTemplate=\"header\">\r\n      <tr>\r\n          <th pSortableColumn=\"id\">STT <p-sortIcon field=\"vin\"></p-sortIcon></th>\r\n          <th pSortableColumn=\"name\">Number <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n          <th pSortableColumn=\"name\">Name <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n          <th pSortableColumn=\"img\">Image <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n          <th pSortableColumn=\"price\">Price <p-sortIcon field=\"inventoryStatus\"></p-sortIcon></th>\r\n          <th style=\"width:4em\">Action</th>\r\n      </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-product let-rowIndex=\"rowIndex\" >\r\n    <tr *ngIf=\"product !== null \">\r\n      <td>{{rowIndex+1}}</td>\r\n      <td>{{product}}</td>\r\n      <td>{{product.name}}</td>\r\n      <td><img src=\"assets/images/{{product.img}}\" alt=\"\" style=\"width:100px\"></td>\r\n      <td>{{product.price}}</td>\r\n      <td>\r\n        <div>\r\n          <button  pButton label=\"Buy\" (click)=\"buy(product.id)\" class=\"p-button-success\"></button>\r\n        </div>\r\n         <div><button (click)=\"delete(rowIndex,product.id)\" pButton label=\"Delete\" class=\"p-button-danger\" style=\"margin: -20px;\"></button></div>\r\n      </td>\r\n  </tr>\r\n  </ng-template>\r\n</p-table>\r\n<div *ngIf=\"lengthItem === 0 && hide\">\r\n  <h3 style=\"text-align: center;\">Cart is empty, please order product</h3>\r\n</div>\r\n<div *ngIf=\"!hide\">\r\n  <h3 style=\"text-align: center;\">Please <a (click)=\"login()\" style=\"color: cadetblue;cursor: pointer;\">login</a> Here</h3>\r\n</div>          \r\n<p-confirmDialog [style]=\"{'width': '50vw', 'font-size':'large'}\" [baseZIndex]=\"10000\" ></p-confirmDialog>   \r\n<p-toast position=\"top-right\" key=\"c\"  [baseZIndex]=\"3000\"></p-toast>                \r\n"
        },
        {
            "name": "ChangePasswordComponent",
            "id": "component-ChangePasswordComponent-9ab42dd312ae59a8cf6f42044882411eef0feedaba029f06bc8d16aaa12e6c28918d8333a764f75b0c6107333c2894622f637078a3acb0d996e27bbbb9f06448",
            "file": "src/app/layout/user/user-page/personal-information/change-password/change-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService"
                },
                {
                    "name": "MessageService"
                }
            ],
            "selector": "app-change-password",
            "styleUrls": [
                "./change-password.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./change-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "oldPass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "password",
                    "defaultValue": "new Object()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { AdminService } from 'src/app/layout/service/admin.service';\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css'],\n  providers: [ConfirmationService, MessageService]\n})\nexport class ChangePasswordComponent implements OnInit {\n  forms: FormGroup;\n  id: any;\n  oldPass: any;\n  password = new Object();\n  constructor(private service: AdminService,\n              private fn: FormBuilder,\n              private config: DynamicDialogConfig,\n              private mess: MessageService,\n              public ref: DynamicDialogRef) { }\n\n  ngOnInit(): void {\n      this.forms = this.fn.group({\n      oldpassword: [''],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n  });\n      this.id = localStorage.getItem('token');\n      this.service.UpdateUserAPI;\n  }\n  change(e: any){\n    console.log(e);\n    delete e.oldpassword;\n    const user = this.config.data.data;\n    user.forEach(el =>\n      this.oldPass = el.password\n    );\n    if (this.oldPass !== this.oldpassword){\n      console.log(this.oldPass);\n      console.log(this.oldpassword);\n      this.mess.add({key: 'c', severity: 'error', summary: 'Error', detail: 'Old password is not correct', life: 3000});\n    }else{\n      this.service.updatePass(e, this.id).subscribe(\n        data => {\n          this.mess.add({key: 'c', severity: 'success', summary: 'Success', detail: 'Change passWord Success'});\n          setTimeout(() => {\n            this.ref.close();\n          }, 2000);\n        }\n      );\n\n    }\n\n  }\n  get oldpassword() {return this.forms.get('oldpassword').value;}\n  get passwords() { return this.forms.get('password'); }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./change-password.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "oldpassword": {
                    "name": "oldpassword",
                    "getSignature": {
                        "name": "oldpassword",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                },
                "passwords": {
                    "name": "passwords",
                    "getSignature": {
                        "name": "passwords",
                        "type": "",
                        "returnType": "",
                        "line": 56
                    }
                }
            },
            "templateData": "<form [formGroup]=\"forms\" (ngSubmit)=\"change(forms.value)\">\n  <div class=\"form-group \" style=\" font-size:large\">\n    <label for=\"\">Old password</label>\n    <div class=\"p-inputgroup group p-col-12  \">\n      <label class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></label>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"oldpassword\"\n        placeholder=\"oldpassword\">\n    </div>\n    <label for=\"\">New password</label>\n    <div class=\"p-inputgroup group p-col-12  \">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required formControlName=\"password\"\n        placeholder=\"Password\">\n    </div>\n    <div *ngIf=\"passwords.invalid && (passwords.dirty || passwords.touched)\">\n      <div *ngIf=\"passwords.errors?.required\" class=\"validate\">\n        <p>Password is required.</p>\n      </div>\n      <div *ngIf=\"passwords.errors?.minlength\" class=\"validate\">\n        <p>Password must be at least 6 characters long.</p>\n      </div>\n    </div>\n  </div>\n  <button pButton label=\"Update\" style=\"margin-top: 15px;\"></button>\n</form>\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>"
        },
        {
            "name": "ConfirmComponent",
            "id": "component-ConfirmComponent-24391e05621af6c3330364fe3b91fda57b7fafc577afad9218fca7a0077c9fe5109d7b132cac2e25a9887cc57664a4d47b10397c4c6cb7582358c3107db99971",
            "file": "src/app/layout/user/oder/confirm/confirm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-confirm",
            "styleUrls": [
                "./confirm.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./confirm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "product",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "ticketInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "ticketService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "complete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prevPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { AdminService } from 'src/app/layout/service/admin.service';\nimport { ProductService } from 'src/app/layout/service/product.service';\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.css']\n})\nexport class ConfirmComponent implements OnInit {\n  ticketInformation: any;\n  product:any[]=[];\n  constructor(\n    private router:Router,\n    public ticketService: ProductService,\n    private routes: ActivatedRoute,\n    private adminService: AdminService,\n    private route: Router,\n    private mess: MessageService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.ticketInformation = this.ticketService.ticketInformation;\n    this.adminService.getOrderProductById(this.ticketInformation.id_product).subscribe(data => this.product.push(data));\n  }\n  prevPage() {\n    this.router.navigate(['order/payment']);\n  }\n  complete(){\n    console.log(this.ticketInformation);\n    this.ticketInformation.product = this.product;\n    this.adminService.orderProduct(this.ticketInformation).subscribe(\n      data=>{\n        this.mess.add({severity: 'success', key: 'c', summary: 'Successful', detail: 'Order Success', life: 3000});\n        this.ticketService.dalateCartItem(this.ticketInformation.idProduct_RD).subscribe();\n        this.ticketService.complete();\n      }\n    );\n    setTimeout(() => {\n      this.route.navigate(['/home']);\n    }, 2000);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./confirm.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ticketService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "adminService",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "adminService",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<p-card>\n  <ng-template pTemplate=\"content\">\n    <div class=\"field col-12\">\n        <label for=\"class\">Name :</label>\n        <br><strong>{{ticketInformation.name ? ticketInformation.name : '-'}}</strong>\n    </div>\n    <div class=\"field col-12\">\n        <label for=\"Age\">Age :</label>\n        <br><strong>{{ticketInformation.age ? ticketInformation.age : '-'}}</strong>\n    </div>\n    <div class=\"field col-12\">\n      <label for=\"Age\">Phone :</label>\n      <br><strong>{{ticketInformation.phone ? ticketInformation.phone : '-'}}</strong>\n  </div>\n  <div class=\"field col-12\">\n    <label for=\"Age\">Address :</label>\n    <br><strong>{{ticketInformation.address ? ticketInformation.address :'-'}}</strong>\n  </div>\n    <div class=\"field col-12\">\n        <label for=\"Age\">Cardholder Name :</label>\n    <br><strong>{{ticketInformation.card_name ? ticketInformation.card_name : '-'}}</strong>\n    </div>\n    <div class=\"field col-12\">\n        <label for=\"Age\">Card Number :</label>\n        <br><strong>{{ticketInformation.card_number ? ticketInformation.card_number : '-'}}</strong>\n    </div>\n  </ng-template>\n</p-card>\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>\n<div class=\"p-grid p-grid-nogutter p-jc-between\" style=\"margin-top: 20px;\">\n  <p-button label=\"Back\" (click)=\"prevPage()\"  icon=\"pi pi-angle-left\"></p-button>\n  <p-button label=\"Complete\" (click)=\"complete()\"   icon=\"pi pi-angle-right\" iconPos=\"right\"></p-button>\n</div>"
        },
        {
            "name": "DetailNewsComponent",
            "id": "component-DetailNewsComponent-237dc17f45761b915d4593d635669464f67b7f60e4b688f1c2ed7ea7eb0cc3c8437354bc98994d0b69856a526050fbf3de0f39da1cd91b1cd8aef4ee0b37e4ea",
            "file": "src/app/layout/user/news/detail-news/detail-news.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-detail-news",
            "styleUrls": [
                "./detail-news.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./detail-news.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataNews",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "listDataNews",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "move",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/layout/service/product.service'; \n@Component({\n  selector: 'app-detail-news',\n  templateUrl: './detail-news.component.html',\n  styleUrls: ['./detail-news.component.css']\n})\nexport class DetailNewsComponent implements OnInit {\n  dataNews:any\n  listDataNews:any[]\n  constructor(private route: ActivatedRoute,private service:ProductService,private routes:Router) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    console.log(id);\n    this.service.getNewsById(id).subscribe(data=>{\n      this.dataNews=data\n      console.log(data);\n    }\n    )\n    this.service.getNews().subscribe(data=>{\n      this.listDataNews=data\n    })\n    \n    \n  }\n  move(id){\n    this.routes.navigate(['./detail',{id:id}])\n    setTimeout(() => {\n      location.reload()\n    }, 300);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".news_nav{\r\n \r\n  background-color:#0078BB ;\r\n  height: 40px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n}\r\n.news_nav_content{\r\n  padding: 11px;\r\n}\r\n.title{\r\n  display: block;\r\n    padding: 0 0 10px 0;\r\n    line-height: 1.3em;\r\n    font-size: 24px;\r\n    color: #000;\r\n    font-weight: 600;\r\n    width: 100%;\r\n}\r\n.line{\r\n  border-top: 1px solid #ddd;\r\n  margin-bottom: 5px;\r\n  width: 90%;\r\n}\r\n.des h2{\r\n  line-height: 1.4;\r\n  font-weight: bold;\r\n  font-size: 17px;\r\n  font: 14px/18px Arial,Helvetica,sans-serif;\r\n  width: 100%;\r\n}\r\n.orther_item{\r\n  display: flex;\r\n  margin: 10px;\r\n}\r\n.orther_title h2{\r\n  margin: 0 0 20px 0;\r\n}\r\n.orther_item h3{\r\n  display: block;\r\n  overflow: hidden;\r\n  height:100px;\r\n  width: 100%;\r\n  margin: 0 40px 0 10px;\r\n  font: 14px/18px Arial,Helvetica,sans-serif;\r\nfont-weight: bold;\r\n}\r\n.orther_time{\r\n  color: #a8a8a8;\r\n}\r\n.orther_time p{\r\n  margin: 0;\r\n}\r\n.content{\r\n  font-size: 24px;\r\n  margin: 20px 0;\r\n  font-weight: bold\r\n}\r\n",
                    "styleUrl": "./detail-news.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"news_nav\">\n  <div class=\"news_nav_content\">\n    <div style=\"display: flex;\">\n      <div routerLink=\"/home\" style=\"cursor: pointer;\">Home</div>\n      <div style=\"margin-top: 1px;\"><i class=\"pi pi-angle-right\"></i></div>\n      <div routerLink=\"/news\" style=\"cursor: pointer;\">News</div>\n      <div style=\"margin-top: 1px;\"><i class=\"pi pi-angle-right\"></i></div>\n      <div>Promotion Information</div>\n    </div>\n  </div>\n</div>\n<div class=\"p-grid\" style=\"margin-top: 3%\">\n  <div class=\"p-col-7\" style=\"background: #f7f7f7;\">\n    <div style=\" margin-left: 20%;\">\n      <div class=\"title\">\n        {{dataNews?.title}}\n      </div>\n      <span class=\"orther_time\">\n        {{dataNews?.create_At | date:'short' }}\n      </span>\n      <div class=\"line\"></div>\n      <div class=\"des\">\n        <h2>\n          {{dataNews?.decription}}\n        </h2>\n      </div>\n      <div>\n        <img src=\"assets\\news\\{{dataNews?.image}}\"\n          style=\" width: 90%;display: block;margin-left: auto;margin-right: auto;\">\n      </div>\n      <div class=\"content\">\n        nội dung chương trình\n      </div>\n      <div>\n        <p>\n          {{dataNews?.content}}\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-col-5 orther\">\n    <div>\n      <div class=\"orther_title\">\n        <h2>Other promotions</h2>\n        <div class=\"line\"></div>\n      </div>\n      <p-dataView [value]=\"listDataNews\" [paginator]=\"true\" [rows]=\"4\" layout=\"grid\">\n        <ng-template let-product pTemplate=\"gridItem\" class=\"lost\">\n          <div (click)=\"move(product.id)\">\n            <div class=\"orther_item\">\n              <div>\n                <img src=\"assets\\news\\{{product?.image}}\" style=\"max-width: 200px; \" alt=\"\">\n                <span class=\"orther_time\">\n                  <p> {{dataNews?.create_At | date:'short' }}</p>\n                </span>\n              </div>\n              <div>\n                <h3>{{product.title}}</h3>\n              </div>\n            </div>\n            <div class=\"line\"></div>\n          </div>\n        </ng-template>\n      </p-dataView>\n\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-556e9a26b679fcffdb3ff432986e4f80e3ab6edea2ab1702e9aa1976bfb2ea622897a25b4e445921d1d727a7d354bfbd4f244baa2fd1a06684810bf586337481-1",
            "file": "src/app/layout/admin/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "text",
                    "defaultValue": "'Log out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "menu",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\r\nimport { JwtService } from 'src/app/shared/service/jwt.service';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  items: MenuItem[];\r\n  text = 'Log out';\r\n  constructor(\r\n    private auth: JwtService,\r\n    private confirm: ConfirmationService,\r\n    // private service: AdminService,\r\n    // private productSerive: ProductService,\r\n    private mess: MessageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      {\r\n        label: 'List User',\r\n        icon: 'pi pi-users',\r\n        routerLink: 'home'\r\n      },\r\n      {\r\n        label: 'List Product',\r\n        icon: 'pi pi-shopping-cart',\r\n        routerLink: 'listProduct'\r\n      },\r\n      {\r\n        label: 'Order Management',\r\n        icon: 'pi pi-fw pi-file',\r\n        routerLink: 'managementProduct'\r\n      },\r\n      {\r\n        label: 'List News',\r\n        icon: 'pi pi-fw pi-file',\r\n        routerLink: 'news'\r\n      },\r\n      {\r\n        label: this.text,\r\n        icon: 'pi pi-sign-out',\r\n      }\r\n    ]\r\n  }\r\n  menu(event){\r\n    if(event.target.innerText === this.text){\r\n      this.confirm.confirm({\r\n        message: 'Are you sure you want to Log Out ?',\r\n        header: 'Confirm',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          this.auth.logout_admin();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<p-panelMenu [model]=\"items\" [style]=\"{'width':'300px'}\" (click)=\"menu($event)\"></p-panelMenu>\r\n<p-confirmDialog [baseZIndex]=\"10000\"></p-confirmDialog>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-440400f21df96bf273e9822b7a92fa135cc41f3897185e6da58d35df0682199f47e2986b985557eed7ef6cc706089b59b892358ff22920ecfaecbaeadf1f7c3c-2",
            "file": "src/app/layout/user/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {MenubarModule} from 'primeng/menubar';\nimport {MenuItem} from 'primeng/api';\nimport { JwtService } from 'src/app/shared/service/jwt.service';\nimport { AdminService } from '../../service/admin.service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  hide: any;\n  logout: any;\n  items: MenuItem[];\n  Image:any[];\n  activeItem: MenuItem;\n  constructor(private auth: JwtService, private serive: AdminService) { }\n\n  ngOnInit(): void {\n    this.serive.getUserById(Number(localStorage.getItem('token'))).subscribe(data => this.Image = data\n    );\n    this.hide= this.auth.isLoggednIn();\n    this.items = [\n      {\n        label: 'Home',\n        icon: 'pi pi-fw pi-home',\n        routerLink: 'home'\n      },\n      {\n        label: 'News',\n        icon: 'pi pi-fw pi-calendar',\n        routerLink: 'news'\n      },\n  ];\n    this.activeItem = this.items[0];\n  }\n  logOut(){\n    this.auth.logout();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n:host ::ng-deep .p-avatar img{\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  object-fit: contain;\r\n} ",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "serive",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "serive",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "HeaderComponent-2",
            "templateData": "<div style=\"background-color: #0078BB;\">\r\n  <img src=\"https://cdn.tgdd.vn/2022/02/banner/1200-44-1200x44-2.png\"\r\n    style=\"display: block;margin-left: auto;margin-right: auto;\" alt=\"\">\r\n</div>\r\n<p-menubar [model]=\"items\">\r\n  <div *ngIf=\"hide\">\r\n    <div>\r\n      <button routerLink=\"../../user\" pButton icon=\"pi pi-user\"\r\n        style=\"float: right; margin-bottom: 5px;padding: 0; height: 50px;\">\r\n        <div class=\"img\" *ngFor=\"let item of Image\">\r\n          <p-avatar image=\"assets/user/{{item.image}}\" pBadge severity=\"danger\" size=\"xlarge\"></p-avatar>\r\n        </div>\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <button style=\"padding: 5px;\" pButton label=\"Logout\" class=\"p-button-sm\" type=\"button\" class=\"p-button-secondary\"\r\n        (click)=\"logOut()\"></button>\r\n    </div>\r\n  </div>\r\n  <button pButton label=\"Login\" type=\"button\" class=\"p-button-primary p-button-raised p-button-rounded\"\r\n    icon=\"pi pi-sign-in\" *ngIf=\"!hide\" routerLink=\"login\"></button>\r\n</p-menubar>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-afdd4dd566403c0a6b5dfc959a4aa1085fbc5c446304872837c748a3fac96f43317bd4641eff1238fab6342f026b9f406d11dad5a50ebe7eb60df12bdad3a74e",
            "file": "src/app/layout/admin/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"p-d-flex p-flex-column p-flex-md-row\">\n  <div class=\"p-mb-4 p-mr-4\">\n    <app-header></app-header>\n  </div>\n  <div class=\"p-mb-8 p-mr-8\" style=\"margin:10px;\">\n    <router-outlet></router-outlet>\n  </div>\n</div>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-f66a1a02ed66c72e7f812dfb8d0e091aa0f413a986207b538f0f7a6f157c219d1bf2ead62087e11282df1dda7c375f136c9e203e952215a93625266bfc0353f8-1",
            "file": "src/app/layout/user/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HomeComponent-1",
            "templateData": "<app-header></app-header>\n\n\n <router-outlet></router-outlet>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-3d02e986296291d93f98c19e79a0c3bfcdb59ab5ae836c5fb175abb2486ebeee9d4d5b30ffe963d94cb9ae19a2738af7778de4232c007e6ef9c0ae6f39abc0b9",
            "file": "src/stories/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-input",
            "styleUrls": [],
            "styles": [],
            "template": "<label for=\"test\">{{label}}</label>\n<input\nid=\"test\"\ntype=\"search\"\nplaceholder=\"Search by Name\"\n[ngStyle]=\"{ 'background-color': backgroundColor, 'color':color }\" >",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'storybook-input',\r\n  template: `\r\n  <label for=\"test\">{{label}}</label>\r\n  <input\r\n  id=\"test\"\r\n  type=\"search\"\r\n  placeholder=\"Search by Name\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor, 'color':color }\" >`,\r\n  styleUrls: [],\r\n})\r\nexport default  class InputComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n   @Input()\r\n   label: string;\r\n\r\n   @Input()\r\n   backgroundColor: string;\r\n\r\n  @Input()\r\n  color: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ListProductComponent",
            "id": "component-ListProductComponent-3a99b36406862d0bb5d97b23e1d0d6b1614fe8c1536e7dd72038954a3e4b728de612888bdd1b368a036fe8019d13274a1dea9096c615b01432245878a44a8cda",
            "file": "src/app/layout/admin/list-product/list-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list-product",
            "styleUrls": [
                "./list-product.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./list-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hiden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "vote",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../service/admin.service';\n@Component({\n  selector: 'app-list-product',\n  templateUrl: './list-product.component.html',\n  styleUrls: ['./list-product.component.css']\n})\nexport class ListProductComponent implements OnInit {\n  products: any[];\n  vote: any;\n  hiden: true;\n  constructor(\n    private data: AdminService) { }\n\n  ngOnInit(): void {\n    this.data.getProduct().subscribe(data => {\n      this.products = data;\n      data.map(element => {\n        this.vote =  (element.vote) / 20;\n      }\n      );\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-product.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<a routerLink=\"../addProduct\" style=\"text-decoration: none;\">\n  <button pButton type=\"button\" label=\"Add new product\" icon=\"pi pi-plus-circle\" class=\"p-button-outlined\"\n    style=\"margin: 1em;\"></button>\n</a>\n<p-table [value]=\"products\" [paginator]=\"true\" [rows]=\"4\">\n  <ng-template pTemplate=\"caption\">\n    <div class=\"p-d-flex p-ai-center p-jc-between\">\n      Products\n      <p-button icon=\"pi pi-refresh\"></p-button>\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th>Name</th>\n      <th>Image</th>\n      <th>Price</th>\n      <th>Vote</th>\n      <th>View</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-product>\n    <tr>\n      <td>{{product.name}}</td>\n      <td>\n        <img src=\"assets/images/{{product.img}}\" alt=\"\" style=\"width:100px\">\n      </td>\n      <td>{{product.price }}</td>\n      <td>{{product.vote}}\n        <p-rating [ngModel]=\"vote\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\n      </td>\n      <td>{{product.view}}</td>\n    </tr>\n  </ng-template>\n</p-table>"
        },
        {
            "name": "ListUserComponent",
            "id": "component-ListUserComponent-e832fa3dc803f6dc3259ee41f0723dc8390f2e9354dce200d2f9290702d4e66f3db858288c20b06a65dbd2c8d6bcf2e087f39605ecc219954da6ce4f2b79c37f",
            "file": "src/app/layout/admin/list-user/list-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService"
                },
                {
                    "name": "MessageService"
                },
                {
                    "name": "DialogService"
                }
            ],
            "selector": "app-list-user",
            "styleUrls": [
                "./list-user.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./list-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "listUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "addUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rowIndex",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rowIndex",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\nimport { AdminService } from '../../service/admin.service';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport {UpdateUserComponent} from './update-user/update-user.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\n@Component({\r\n  selector: 'app-list-user',\r\n  templateUrl: './list-user.component.html',\r\n  styleUrls: ['./list-user.component.css'],\r\n  providers: [ConfirmationService, MessageService, DialogService]\r\n})\r\nexport class ListUserComponent implements OnInit {\r\n  constructor(\r\n    private dataUser: AdminService,\r\n    private confSV: ConfirmationService,\r\n    private mess: MessageService,\r\n    private config: PrimeNGConfig,\r\n    public dialogService: DialogService) { }\r\n  listUser: any[];\r\n  cols: any[];\r\n  ref: DynamicDialogRef;\r\n\r\n  ngOnInit(): void {\r\n    this.config.ripple = true;\r\n    this.dataUser.getUser().subscribe(data => {\r\n      const admin = {\r\n        username: 'admin',\r\n      };\r\n      const i = data.indexOf(admin);\r\n      data.splice(i, 1);\r\n      this.listUser = data;\r\n    });\r\n  }\r\n  addUser(): void {\r\n    this.ref = this.dialogService.open(AddUserComponent, {\r\n      data: {\r\n        data: this.listUser\r\n      },\r\n      header: 'Add new User',\r\n      width: '50%',\r\n      contentStyle: {\r\n      'max-height': '1000px',\r\n      'min-height': '300px',\r\n      overflow: 'auto',\r\n      'justify-content': 'center',\r\n      display: 'inherit'},\r\n      baseZIndex: 10000\r\n    });\r\n  }\r\n\r\n  delete(id: any, rowIndex: any): void{\r\n    console.log('abc');\r\n    this.confSV.confirm({\r\n      message: 'Are you sure you want to delete the selected products?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.dataUser.deleteUser(id).subscribe(\r\n          data =>  {\r\n            this.mess.add({key: 'c', severity: 'success', summary: 'Successful', detail: 'User delete Complete', life: 5000});\r\n            this.listUser = this.listUser.filter((input, i) => i !== rowIndex);\r\n            console.log(data);\r\n          },\r\n          err  =>  console.log(err)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  update(id: number): void{\r\n    console.log(id);\r\n    this.ref = this.dialogService.open(UpdateUserComponent, {\r\n      header: 'Update user',\r\n      data: { id },\r\n      width: '50%',\r\n      contentStyle: {'max-height': '1000px', 'min-height': '300px', overflow: 'auto', 'justify-content': 'center',    display: 'inherit'},\r\n      baseZIndex: 10000\r\n  });\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host ::ng-deep .news {\r\n  background-color: aqua\r\n}",
                    "styleUrl": "./list-user.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataUser",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confSV",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "dataUser",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confSV",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton type=\"button\" style=\"margin: 1em;\" label=\"Add new user\" icon=\"pi pi-plus-circle\" (click)=\"addUser()\"\r\n  class=\"p-button-outlined\"></button>\r\n<p-table id=\"table\" #table [columns]=\"cols\" [value]=\"listUser\" [paginator]=\"true\" [rows]=\"10\"\r\n  [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,25,50]\" >\r\n\r\n  <ng-template pTemplate=\"header\" let-columns>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Age</th>\r\n      <th>Email</th>\r\n      <th>Phone</th>\r\n      <th>Address</th>\r\n      <th>Action</th>\r\n    </tr>\r\n    <tr>\r\n      <th class=\"news\">\r\n        <p-columnFilter type=\"text\" field=\"name\"></p-columnFilter>\r\n      </th>\r\n      <th>\r\n        <p-columnFilter type=\"text\" field=\"age\"></p-columnFilter>\r\n      </th>\r\n      <th>\r\n        <p-columnFilter type=\"text\" field=\"Email\"></p-columnFilter>\r\n      </th>\r\n      <th>\r\n        <p-columnFilter type=\"text\" field=\"phone\"></p-columnFilter>\r\n      </th>\r\n      <th>\r\n        <p-columnFilter type=\"text\" field=\"address\"></p-columnFilter>\r\n      </th>\r\n      <th></th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-list let-rowIndex=\"rowIndex\">\r\n    <tr>\r\n      <td>{{list.username}}</td>\r\n      <td>{{list.age}}</td>\r\n      <td>{{list.email}}</td>\r\n      <td>{{list.phone}}</td>\r\n      <td>{{list.address}}</td>\r\n      <td>\r\n        <button pButton type=\"button\" label=\"Update\" (click)=\"update(list.id)\" class=\"p-button-success p-button-sm\"\r\n          style=\"margin-right: 5px;\"></button>\r\n        <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Delete\" (click)=\"delete(list.id,rowIndex)\"\r\n          class=\"p-button-danger p-button-sm\"></button>\r\n\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n\r\n</p-table>\r\n<p-confirmDialog [baseZIndex]=\"10000\"></p-confirmDialog>\r\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-801cb0c72e4fabd618e1a349c93daae3cd95c61189429d64fa9a110217dee4ee1cf6f263b9d4fa4d16dfc3ee9d2bf3b1a1585e6f01ad7394dd59234f06c70435",
            "file": "src/app/layout/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tokens",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { JwtService } from 'src/app/shared/service/jwt.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [MessageService]\n})\nexport class LoginComponent implements OnInit {\n  forms: FormGroup;\n\n  tokens: string;\n  constructor(\n    private http: JwtService,\n    private fn: FormBuilder,\n    private router: Router,\n    private mess: MessageService) { }\n\n  ngOnInit(): void {\n    // this.jwtsv.getToken().subscribe(res=>this.tokens=res.request_token)\n    this.forms = this.fn.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n  login(e) {\n    // e.request_token=this.tokens\n    this.http.login(e).subscribe(\n      data => {\n        if (data.length > 0) {\n          data.forEach(el => {\n            if(el.username === 'admin' && el.password === '123456'){\n              this.mess.add({ severity: 'success', key: 'c', summary: 'Successful', detail: ' Welcome Admin', life: 1500 });\n              setTimeout(() => {\n                this.router.navigate(['/admin']);\n              }, 1500);\n            }\n            else{\n              this.mess.add({ severity: 'success', key: 'c', summary: 'Successful', detail: 'Login Success', life: 1500 });\n              setTimeout(() => {\n                this.router.navigate(['/home']);\n              }, 1500);\n            }\n          });\n        }\n      },\n      err => this.mess.add({ severity: 'error', key: 'c', summary: 'Erorr', detail: 'Username of Password incorrect', life: 3000 })\n    )\n  }\n  register() {\n    this.router.navigate(['/register']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body{\r\n\tmargin:0;\r\n\tcolor:#6a6f8c;\r\n\tbackground:#c8c8c8;\r\n\tfont:600 16px/18px 'Open Sans',sans-serif;\r\n}\r\n*,:after,:before{box-sizing:border-box}\r\n.clearfix:after,.clearfix:before{content:'';display:table}\r\n.clearfix:after{clear:both;display:block}\r\na{color:inherit;text-decoration:none}\r\n\r\n.login-wrap{\r\n\twidth:100%;\r\n\tmargin:auto;\r\n\tmax-width:525px;\r\n\tmin-height:670px;\r\n\tposition:relative;\r\n\tbackground:url(https://raw.githubusercontent.com/khadkamhn/day-01-login-form/master/img/bg.jpg) no-repeat center;\r\n\tbox-shadow:0 12px 15px 0 rgba(0,0,0,.24),0 17px 50px 0 rgba(0,0,0,.19);\r\n}\r\n.login-html{\r\n\twidth:100%;\r\n\theight:100%;\r\n\tposition:absolute;\r\n\tpadding:90px 70px 50px 70px;\r\n\tbackground:rgba(40,57,101,.9);\r\n}\r\n.login-html .sign-in-htm,\r\n.login-html .sign-up-htm{\r\n\ttop:0;\r\n\tleft:0;\r\n\tright:0;\r\n\tbottom:0;\r\n\tposition:absolute;\r\n\ttransform:rotateY(180deg);\r\n\tbackface-visibility:hidden;\r\n\ttransition:all .4s linear;\r\n}\r\n.login-html .sign-in,\r\n.login-html .sign-up,\r\n.login-form .group .check{\r\n\tdisplay:none;\r\n}\r\n.login-html .tab,\r\n.login-form .group .label,\r\n.login-form .group .button{\r\n\ttext-transform:uppercase;\r\n}\r\n.login-html .tab{\r\n\tfont-size:22px;\r\n\tmargin-right:15px;\r\n\tpadding-bottom:5px;\r\n\tmargin:0 15px 10px 0;\r\n\tdisplay:inline-block;\r\n\r\n}\r\n.login-html .sign-in:checked + .tab,\r\n.login-html .sign-up:checked + .tab{\r\n\tcolor:#fff;\r\n\tborder-color:#1161ee;\r\n}\r\n.login-form{\r\n\tmin-height:345px;\r\n\tposition:relative;\r\n\tperspective:1000px;\r\n\ttransform-style:preserve-3d;\r\n}\r\n.login-form .group{\r\n\tmargin-bottom:15px;\r\n}\r\n.login-form .group .label,\r\n.login-form .group .input,\r\n.login-form .group .button{\r\n\twidth:100%;\r\n\tcolor:#fff;\r\n\tdisplay:block;\r\n}\r\n.login-form .group .input,\r\n.login-form .group .button{\r\n\tborder:none;\r\n\tpadding:15px 20px;\r\n\tborder-radius:25px;\r\n\tbackground:rgba(255,255,255,.1);\r\n}\r\n.login-form .group input[data-type=\"password\"]{\r\n\ttext-security:circle;\r\n\t-webkit-text-security:circle;\r\n}\r\n.login-form .group .label{\r\n\tcolor:#aaa;\r\n\tfont-size:12px;\r\n}\r\n.login-form .group .button{\r\n\tbackground:#1161ee;\r\n}\r\n.login-form .group label .icon{\r\n\twidth:15px;\r\n\theight:15px;\r\n\tborder-radius:2px;\r\n\tposition:relative;\r\n\tdisplay:inline-block;\r\n\tbackground:rgba(255,255,255,.1);\r\n}\r\n.login-form .group label .icon:before,\r\n.login-form .group label .icon:after{\r\n\tcontent:'';\r\n\twidth:10px;\r\n\theight:2px;\r\n\tbackground:#fff;\r\n\tposition:absolute;\r\n\ttransition:all .2s ease-in-out 0s;\r\n}\r\n.login-form .group label .icon:before{\r\n\tleft:3px;\r\n\twidth:5px;\r\n\tbottom:6px;\r\n\ttransform:scale(0) rotate(0);\r\n}\r\n.login-form .group label .icon:after{\r\n\ttop:6px;\r\n\tright:0;\r\n\ttransform:scale(0) rotate(0);\r\n}\r\n.login-form .group .check:checked + label{\r\n\tcolor:#fff;\r\n}\r\n.login-form .group .check:checked + label .icon{\r\n\tbackground:#1161ee;\r\n}\r\n.login-form .group .check:checked + label .icon:before{\r\n\ttransform:scale(1) rotate(45deg);\r\n}\r\n.login-form .group .check:checked + label .icon:after{\r\n\ttransform:scale(1) rotate(-45deg);\r\n}\r\n.login-html .sign-in:checked + .tab + .sign-up + .tab + .login-form .sign-in-htm{\r\n\ttransform:rotate(0);\r\n}\r\n.login-html .sign-up:checked + .tab + .login-form .sign-up-htm{\r\n\ttransform:rotate(0);\r\n}\r\n\r\n.hr{\r\n\theight:2px;\r\n\tmargin:60px 0 50px 0;\r\n\tbackground:rgba(255,255,255,.2);\r\n}\r\n.foot-lnk{\r\n\ttext-align:center;\r\n}",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"login-wrap\">\n  <p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>\n  <div class=\"login-html\">\n    <input id=\"tab-1\" type=\"radio\" name=\"tab\" class=\"sign-in\" checked><label for=\"tab-1\" class=\"tab\">Sign In</label>\n    <input id=\"tab-2\" type=\"radio\" name=\"tab\" class=\"sign-up\"><label for=\"tab-2\" class=\"tab\"></label>\n    <div class=\"login-form\">\n      <form [formGroup]=\"forms\" (ngSubmit)=\"login(forms.value)\">\n        <div class=\"sign-in-htm\">\n          <div class=\"group\">\n            <label for=\"user\" class=\"label\">Username</label>\n            <input id=\"user\" type=\"text\" class=\"input\" formControlName=\"username\">\n          </div>\n          <div class=\"group\">\n            <label for=\"pass\" class=\"label\">Password</label>\n            <input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\" formControlName=\"password\">\n          </div>\n          <div class=\"group\">\n            <input id=\"check\" type=\"checkbox\" class=\"check\" checked>\n            <label for=\"check\"><span class=\"icon\"></span> Keep me Signed in</label>\n          </div>\n          <div class=\"group\">\n            <button class=\"button\" type=\"submit\">SIGN IN</button>\n            <button routerLink=\"/home\" class=\"button\" style=\"margin-top: 20px;background-color: brown;\">HOME</button>\n          </div>\n          <div class=\"hr\"></div>\n          <div class=\"foot-lnk\">\n            <a>Forgot Password?</a>\n            <div>\n              <h3 style=\"color: aliceblue; cursor: pointer;\" (click)=\"register()\">If you do not have an account,\n                register here </h3>\n            </div>\n          </div>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "ManagamentProductComponent",
            "id": "component-ManagamentProductComponent-913edc7e8701b5b564d8f8674e0d122a879ce2864ef3b18507a42d806dae451dab67e87fae861d0ed8aa73afc1ba6ad835cb2024ef4d5a94bdebfbd7408bbdb9",
            "file": "src/app/layout/admin/managament-product/managament-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-managament-product",
            "styleUrls": [
                "./managament-product.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./managament-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "product",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { element } from 'protractor';\nimport { AdminService } from '../../service/admin.service';\n@Component({\n  selector: 'app-managament-product',\n  templateUrl: './managament-product.component.html',\n  styleUrls: ['./managament-product.component.css']\n})\nexport class ManagamentProductComponent implements OnInit {\n  user: any[];\n  id: any;\n  product: any[]=[];\n  constructor(private data: AdminService) { }\n  ngOnInit(): void {\n    this.data.getOrderProduct().subscribe(datas =>\n          {\n            this.user=datas;\n            datas.forEach( element => {\n              this.product.push(element.product);\n            });\n          }\n      );\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./managament-product.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3>List Management Product</h3>\n<p-table [value]=\"user\" dataKey=\"id\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th>Order number</th>\n      <th>Create_At</th>\n      <th>Name User</th>\n      <th>Address</th>\n      <th>Phone</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\n    <tr>\n      <td>\n        <button type=\"button\" pButton pRipple [pRowToggler]=\"data\" class=\"p-button-text p-button-rounded p-button-plain\"\n          [icon]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></button>\n      </td>\n      <td>{{data.create_At| date:'medium'}}</td>\n      <td>{{data.name}}</td>\n      <td>{{data.address}}</td>\n      <td>{{data.phone}}</td>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"rowexpansion\" let-data>\n    <tr>\n      <td colspan=\"7\">\n        <div class=\"p-p-3\">\n          <p-table [value]=\"data.product\">\n            <ng-template pTemplate=\"header\">\n    <tr>\n      <th pSortableColumn=\"id\">Order number<p-sortIcon field=\"price\"></p-sortIcon>\n      </th>\n      <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon>\n      </th>\n      <th>Image</th>\n      <th pSortableColumn=\"date\">price <p-sortIcon field=\"price\"></p-sortIcon>\n      </th>\n      <th style=\"width: 4rem\"></th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-order let-rowIndex=\"rowIndex\">\n    <tr>\n      <td>{{rowIndex+1}}</td>\n      <td>{{order.name}}</td>\n      <td>\n        <img src=\"assets/images/{{order.img}}\" alt=\"\" style=\"width:100px\">\n      </td>\n      <td>\n        {{order.price}}\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n</div>\n</td>\n</tr>\n</ng-template>\n</p-table>\n<!-- <li>{{data.create_At | date:'medium'  }}</li> -->"
        },
        {
            "name": "NewsComponent",
            "id": "component-NewsComponent-7d82c52a437226d4685158fa0eb90795d69e403930bf98c340ecbf43fae587c53d1e91c24f6c47ed76db187d1bdaef1cd84e5de200d2ec7a49b9fa55f77eb3cc",
            "file": "src/app/layout/admin/news/news.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-news",
            "styleUrls": [
                "./news.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./news.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "selecttedFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadimg",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { AdminService } from '../../service/admin.service';\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n  forms: FormGroup\n  selecttedFile:File\n  constructor(private fn: FormBuilder,private mess:MessageService,private service:AdminService,private http:HttpClient) { }\n\n  ngOnInit(): void {\n    this.forms= this.fn.group({\n      title:['',[Validators.required]],\n      decription:['',[Validators.required]],\n      image:['',[Validators.required]],\n      content:['',Validators.required],\n      create_At:[new Date()],\n    })\n  }\n  onSubmit(e){\n    console.log(e);\n    e.image = this.selecttedFile.name\n    this.service.postNews(e).subscribe(\n      data=>console.log(data)\n      \n    );\n    const uploadData= new FormData();\n    uploadData.append(\"myfile\", this.selecttedFile,this.selecttedFile.name)\n    this.http.post('http://localhost:80/angular/uploadImgNews.php',uploadData,{\n      reportProgress:true,\n      observe:'events'\n    }).subscribe(\n      data=>console.log(data)\n    )\n    this.mess.add({key: 'c',severity:'success', summary: 'Successful', detail: 'Add Product Complete', life: 3000});\n    \n  }\n  uploadimg(e:any){\n    this.selecttedFile = e.target.files[0]\n    const type = this.selecttedFile.type\n    if(!type.match(/image\\/*/)){\n      this.mess.add({key: 'c',severity:'error', summary: 'Error', detail: 'Incorrect format, please upload image file', life: 3000})\n      this.forms.controls.img.reset()\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./news.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"forms\" (ngSubmit)=\"onSubmit(forms.value)\">\n  <div class=\"formGroup\">\n    <h3>Title</h3>\n    <textarea rows=\"5\" cols=\"60\" pInputTextarea autoResize=\"autoResize\" formControlName=\"title\"></textarea>\n  </div>\n  <div class=\"formGroup\">\n    <h3>Decription</h3>\n    <textarea rows=\"5\" cols=\"60\" pInputTextarea autoResize=\"autoResize\" formControlName=\"decription\"></textarea>\n  </div>\n  <div class=\"formGroup\">\n    <h3>Content</h3>\n    <textarea rows=\"5\" cols=\"60\" pInputTextarea autoResize=\"autoResize\" formControlName=\"content\"></textarea>\n  </div>\n  <h3 for=\"\">Image</h3>\n  <div class=\"p-inputgroup group p-col-12  \">\n    <span class=\"p-inputgroup-addon\"><i class=\"pi pi-images\"></i></span>\n    <input type=\"file\" pInputText (change)=\"uploadimg($event)\" formControlName=\"image\">\n  </div>\n  <p-button type=\"submit\">Add news</p-button>\n</form>\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>"
        },
        {
            "name": "NewsComponent",
            "id": "component-NewsComponent-3419223120d3ad0c124c0f660038afdbd1a16ce5cab739bc830496232b0ba28f9ebbbcc8980169f84850e248b4e9decbb048a7261e6f34d5d5b4e00b5454e432-1",
            "file": "src/app/layout/user/news/news.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-news",
            "styleUrls": [
                "./news.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./news.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataNews",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../service/product.service';\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n  dataNews: any[];\n  constructor(private service: ProductService) { }\n\n  ngOnInit(): void {\n    this.service.getNews().subscribe(data => {\n      this.dataNews = data;\n      console.log(this.dataNews);\n    }\n    );\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".news_nav{\r\n\r\n  background-color:#0078BB ;\r\n  height: 40px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n}\r\n.news_nav_content{\r\n  padding: 10px;\r\n}\r\n.content{\r\n  width: 650px;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    text-align: left;\r\n    background: #f7f7f7;\r\n    padding: 2%;\r\n    padding-top: 1%;\r\n    height: 70px;\r\n    line-height: 22px;\r\n    border-bottom: 21px solid #f7f7f7;\r\n}\r\n.time{\r\n  display: block;\r\n  color: #000;\r\n  padding: 0 2%;\r\n  padding-bottom: 0;\r\n}\r\n.line{\r\n  border-top: 1px solid #ddd;\r\n  margin-bottom: 5px;\r\n}\r\n.title{\r\n  display: block;\r\n  width: max-content;\r\n    margin: 5px 0;\r\n    color: #000;\r\n    padding: 0 2%;\r\n    padding-bottom: 0;\r\n    font-weight: bold;\r\n    max-height: 38px;\r\n    overflow: hidden;\r\n    \r\n}\r\n\r\n:host ::ng-deep .p-grid {\r\n  justify-content:  space-evenly;\r\n} \r\n.news_item{\r\n  cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./news.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NewsComponent-1",
            "templateData": "<div class=\"news_nav\">\r\n  <div class=\"news_nav_content\">\r\n    <div style=\"display: flex;\">\r\n      <div routerLink=\"/home\" style=\"cursor: pointer;\">Home</div>\r\n      <div style=\"margin-top: 1px;\"><i class=\"pi pi-angle-right\"></i></div>\r\n      <div>News</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<p-dataView [value]=\"dataNews\" [paginator]=\"true\" [rows]=\"2\" layout=\"grid\">\r\n  <ng-template let-product pTemplate=\"gridItem\">\r\n    <div style=\"margin-top: 3%\">\r\n      <div class=\"p-order-sm-6 p-order-6 p-order-lg-3 p-order-md-3 p-col-6 news_item\" style=\"background: #f7f7f7;\"\r\n        [routerLink]=\"['../detail',{id:product.id}]\">\r\n        <div>\r\n          <img src=\"assets/news/{{product.image}}\" style=\"width:700px\" alt=\"\">\r\n        </div>\r\n        <div class=\"title\">\r\n          {{product.title}}\r\n        </div>\r\n        <div class=\"time\" style=\"color:#a8a8a8;\">\r\n          {{product?.create_At | date:'short' }}\r\n        </div>\r\n        <div class=\"line\">\r\n        </div>\r\n        <div class=\"content\">\r\n          {{product.decription}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</p-dataView>"
        },
        {
            "name": "OderComponent",
            "id": "component-OderComponent-e0a0bf87ec8e7f5a634ae77c4ff69b2f29ee5be84bc91a286ccb0a7054f0a6ea4985ced549a156b5cfe629b1ade726725856023d28f2f58372e61ada260a162f",
            "file": "src/app/layout/user/oder/oder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "app-oder",
            "styleUrls": [
                "./oder.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./oder.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "idProduct",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "idProductRD",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "product",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "buy",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ParamMap, ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { AdminService } from '../../service/admin.service';\r\nimport {MenuItem, MessageService} from 'primeng/api';\r\nimport { ProductService } from '../../service/product.service';\r\n@Component({\r\n  selector: 'app-oder',\r\n  templateUrl: './oder.component.html',\r\n  styleUrls: ['./oder.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class OderComponent implements OnInit {\r\n  forms: FormGroup;\r\n  idProduct: any;\r\n  idProductRD: any;\r\n  product: any[] = [];\r\n  items: MenuItem[];\r\n  activeIndex: number = 1;\r\n  constructor(\r\n    private form: FormBuilder,\r\n        private routes: ActivatedRoute,\r\n ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.idProduct = this.routes.snapshot.paramMap.get('id');\r\n    this.idProductRD= this.routes.snapshot.paramMap.get('id_RD');\r\n    // console.log(this.idProductRD);\r\n    \r\n\r\n\r\n    // );\r\n    // this.forms = this.form.group({\r\n    //   name: ['', [Validators.required]],\r\n    //   age: ['', [Validators.required]],\r\n    //   phone: ['', [Validators.required]],\r\n    //   address: ['', [Validators.required]],\r\n    //   id_product: [this.idProduct],\r\n    //   create_At: [new Date()],\r\n    //   product: [this.product],\r\n    //   id_user: [id]\r\n    // });\r\n    this.items = [\r\n    {\r\n      label: 'Personal',\r\n      routerLink: ['personal',{id: this.idProduct, idRD: this.idProductRD}],\r\n      command: (event: any) => {\r\n        this.activeIndex = 0;\r\n    }\r\n    },\r\n    {\r\n      label: 'Payment',\r\n      routerLink: 'payment',\r\n      command: (event: any) => {\r\n        this.activeIndex = 1;\r\n    }\r\n    },\r\n    {\r\n      label: 'Confirmation',\r\n      routerLink: 'confirmation',\r\n      command: (event: any) => {\r\n        this.activeIndex = 2;\r\n    }\r\n    }\r\n];\r\n}\r\n  buy(e: any){\r\n    console.log(e);\r\n    \r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./oder.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "form",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "form",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n  <p-steps [model]=\"items\" [(activeIndex)]=\"activeIndex\" [readonly]=\"false\"></p-steps>\r\n</div>\r\n<router-outlet></router-outlet>"
        },
        {
            "name": "OrderInformationComponent",
            "id": "component-OrderInformationComponent-161db4ed238a8ee73d1f06da9a22f1a056d709805cd43da1f7fcc6377cfe6c3a3858a914ed53ccf2da3fc2f49021ef2ef2dc146801829487e1d730d430b98f0c",
            "file": "src/app/layout/user/user-page/order-information/order-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-order-information",
            "styleUrls": [
                "./order-information.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./order-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lisproduct",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "listOrder",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { compileNgModule } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/layout/service/admin.service';\n@Component({\n  selector: 'app-order-information',\n  templateUrl: './order-information.component.html',\n  styleUrls: ['./order-information.component.css']\n})\nexport class OrderInformationComponent implements OnInit {\n  listOrder:any[]=[]\n  lisproduct:any[]=[]\n  constructor(private seerive:AdminService) { }\n\n  ngOnInit(): void {\n    this.seerive.getOrderProduct().subscribe(data=>\n      {\n       const product = data.filter(el=>el.id_user ===Number(localStorage.getItem('token')))\n       console.log(product);\n      product.forEach(el=>{\n        console.log(el.product);\n        this.lisproduct.push(el.product)\n        console.log(this.lisproduct);\n      })\n      this.lisproduct.map(el=>{\n        el.map(el=>{\n          console.log(el);\n          this.listOrder.push(el)\n          console.log(this.listOrder);\n        }\n        )\n      }\n      )\n      }\n    )\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./order-information.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "seerive",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "seerive",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-table id=\"table\" [value]=\"listOrder\">\n\n  <ng-template pTemplate=\"header\" let-columns>\n    <tr>\n      <th>Order number</th>\n      <th>Name</th>\n      <th>Image</th>\n      <th>Price</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-list let-rowIndex=\"rowIndex\">\n    <tr>\n      <td>{{rowIndex +1}}</td>\n      <td>{{list.name}}</td>\n      <td><img src=\"assets/images/{{list.img}}\" height=\"100px\" alt=\"\"></td>\n      <td>{{list.price}}</td>\n    </tr>\n  </ng-template>\n</p-table>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PaymentComponent",
            "id": "component-PaymentComponent-10cf803b7b382ba97c834f3169364968182f730cf554e565be123f91eb50009498644065768a4f13d4fa061e6583e2d4408759e70db11e78fdd605444f518c61",
            "file": "src/app/layout/user/oder/payment/payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payment",
            "styleUrls": [
                "./payment.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "personalInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "ticketService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductService",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "next",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prevPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductService } from 'src/app/layout/service/product.service';\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  personalInformation: any;\n  constructor(\n    private route: Router,\n    public ticketService: ProductService,\n  ) { }\n\n  ngOnInit(): void {\n    this.personalInformation = this.ticketService.ticketInformation;\n  }\n  next(e) {\n    console.log(123);\n    if (this.personalInformation.card_name && this.personalInformation.card_number) {\n      this.ticketService.ticketInformation = this.personalInformation;\n      this.route.navigate(['order/confirmation']);\n  }\n\n}\n  prevPage() {\n  this.route.navigate(['order/personal']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./payment.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ticketService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"p-col-12\" #bookForm=\"ngForm\" >\n  <div class=\"form-group\">\n    <div class=\"p-inputgroup p-col-12\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" #card_name='ngModel' pInputText type=\"text\" name=\"cart_name\" required [ngClass]=\"{'ng-dirty': (card_name.invalid) && (card_name.dirty || card_name.touched)}\" [(ngModel)]=\"personalInformation.card_name\"\n        placeholder=\"Card Name\">\n    </div>\n    <small *ngIf=\"card_name.invalid && (card_name.touched || card_name.dirty)\" class=\"p-error\">Card_name is required.</small>\n    <div class=\"p-inputgroup p-col-12\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" #card_number='ngModel' pInputText type=\"number\" name=\"card_number\" required [ngClass]=\"{'ng-dirty': (card_number.invalid) && (card_number.dirty || card_number.touched)}\" [(ngModel)]=\"personalInformation.card_number\" \n        placeholder=\"Card Number\">\n    </div>\n    <small *ngIf=\"card_number.invalid && (card_number.touched || card_number.dirty)\" class=\"p-error\">Card_number is required.</small>\n  </div>\n</form>\n\n<div class=\"p-grid p-grid-nogutter p-jc-between\">\n  <p-button label=\"Back\" (click)=\"prevPage()\"  icon=\"pi pi-angle-left\"></p-button>\n  <p-button label=\"NextPage\" (click)=\"next(bookForm.value)\"  icon=\"pi pi-angle-right\" iconPos=\"right\"></p-button>\n</div>\n"
        },
        {
            "name": "PersonalComponent",
            "id": "component-PersonalComponent-5ce0c850c3e855755cdbf301636ab1466d7af25745470d940d6e9d8effcbfeab1043f6ee53f313f873b1a25651a648efa3bf98e5587e00f1d2cf1e191f32c8b4",
            "file": "src/app/layout/user/oder/personal/personal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-personal",
            "styleUrls": [
                "./personal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./personal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "idProduct",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "idProductRD",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "personalInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "ticketService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "next",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/layout/service/product.service';\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.css']\n})\nexport class PersonalComponent implements OnInit {\n  personalInformation: any;\n  idProduct: any;\n  idProductRD: any;\n  constructor(\n    private route: Router,\n    public ticketService: ProductService,\n    private routes: ActivatedRoute,\n\n  ) { }\n  ngOnInit(): void {\n    this.idProduct = this.routes.snapshot.paramMap.get('id');\n    this.idProductRD = this.routes.snapshot.paramMap.get('idRD');\n    this.personalInformation = this.ticketService.getTicketInformation();\n  }\n  next(e) {\n    const id = Number(localStorage.getItem('token'));\n    // tslint:disable-next-line: max-line-length\n    if (this.personalInformation.name  && this.personalInformation.age && this.personalInformation.phone && this.personalInformation.address) {\n      this.ticketService.ticketInformation = this.personalInformation;\n      this.personalInformation.id_product = this.idProduct;\n      this.personalInformation.idProduct_RD = this.idProductRD;\n      this.personalInformation.id_user= id;\n      this.personalInformation.create_At = new Date();\n      this.route.navigate(['order/payment']);\n      return;\n  }\n}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./personal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ticketService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"p-col-12\"  #bookForm=\"ngForm\" >\n  <div class=\"form-group\">\n    <div class=\"p-inputgroup p-col-12\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" #name=\"ngModel\" id=\"name\" pInputText type=\"text\" name=\"name\" [(ngModel)]=\"personalInformation.name\"\n        placeholder=\"Username\" required [ngClass]=\"{'ng-dirty': (name.invalid) && (name.dirty || name.touched)}\">\n    </div>\n    <small *ngIf=\"name.invalid && (name.touched || name.dirty)\" class=\"p-error\">Name is required.</small>\n    <div class=\"p-inputgroup p-col-12\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" #age=\"ngModel\" id=\"age\" required [ngClass]=\"{'ng-dirty': (age.invalid) && (age.dirty || age.touched)}\"  pInputText type=\"number\" name=\"age\"  \n      [(ngModel)]=\"personalInformation.age\"\n        placeholder=\"Age\">\n    </div>\n    <small *ngIf=\"age.invalid && (age.touched || name.dirty)\" class=\"p-error\">Age is required.</small>\n    <div class=\"p-inputgroup p-col-12\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-phone\"></i></span>\n      <input class=\"form-control\" #phone=\"ngModel\" id=\"phone\" pInputText  type=\"text\" name=\"phone\" required\n      [ngClass]=\"{'ng-dirty': (phone.invalid) && (phone.dirty || phone.touched)}\"\n      [(ngModel)]=\"personalInformation.phone\"\n        placeholder=\"Phone\">\n    </div>\n    <small *ngIf=\"phone.invalid && (phone.touched || name.dirty)\" class=\"p-error\">Phone is required.</small>\n    <div class=\"p-inputgroup p-col-12\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-id-card\"></i></span>\n      <input class=\"form-control\"  #address=\"ngModel\" id=\"address\" pInputText type=\"text\" name=\"address\" required  [ngClass]=\"{'ng-dirty': (address.invalid) && (address.dirty || address.touched)}\" [(ngModel)]=\"personalInformation.address\"\n        placeholder=\"Address\">\n    </div>\n    <small *ngIf=\"address.invalid && (address.touched || name.dirty)\" class=\"p-error\">Address is required.</small>\n  </div>\n</form>\n<div class=\"p-d-flex p-jc-sm-end\">\n  <p-button  label=\"NextPage\" (click)=\"next(bookForm.value)\" icon=\"pi pi-angle-right\"></p-button>\n</div>\n"
        },
        {
            "name": "PersonalInformationComponent",
            "id": "component-PersonalInformationComponent-e2d434ac2770e2596789cb05c6b320232cdda49da1e19c88caecb3a6bcdad05e81775765363a6abfa6bae1c00713ddf3112461202f42aac123e64197640119ff",
            "file": "src/app/layout/user/user-page/personal-information/personal-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DialogService"
                },
                {
                    "name": "MessageService"
                }
            ],
            "selector": "app-personal-information",
            "styleUrls": [
                "./personal-information.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./personal-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "changePass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/layout/service/admin.service';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-personal-information',\n  templateUrl: './personal-information.component.html',\n  styleUrls: ['./personal-information.component.css'],\n  providers: [DialogService, MessageService]\n})\nexport class PersonalInformationComponent implements OnInit {\n  constructor(\n  private service: AdminService,\n  public dialogService: DialogService) { }\n  id: any;\n  dataUser: any[];\n  ref: DynamicDialogRef;\n  ngOnInit(): void {\n    this.id = localStorage.getItem('token');\n    this.service.getUserById(this.id).subscribe(data =>\n      {\n      this.dataUser = data ;\n      console.log(data);\n      }\n    );\n  }\n  // tslint:disable-next-line: typedef\n  changePass(){\n    this.ref = this.dialogService.open(ChangePasswordComponent, {\n      data: {\n        data: this.dataUser\n      },\n      header: 'Change Password',\n      width: '50%',\n      contentStyle: {'max-height': '1000px', 'min-height': '300px', overflow: 'auto', 'justify-content': 'center',    display: 'inherit'},\n      baseZIndex: 10000\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./personal-information.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-table id=\"table\" [value]=\"dataUser\" responsiveLayout=\"scroll\">\n  <ng-template pTemplate=\"header\" let-columns>\n    <tr>\n      <th>UserName</th>\n      <th>Password</th>\n      <th>Email</th>\n      <th>Phone</th>\n      <th>Age</th>\n      <th>Address</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-list let-rowIndex=\"rowIndex\">\n    <tr>\n      <td>{{list.username}}</td>\n      <td>{{list.password}}</td>\n      <td>{{list.email}}</td>\n      <td>{{list.phone}}</td>\n      <td>{{list.age}}</td>\n      <td>{{list.address}}</td>\n    </tr>\n  </ng-template>\n</p-table>\n<button pButton (click)=\"changePass()\" style=\"margin: 20px 0;\">Change Password</button>\n<p-confirmDialog [baseZIndex]=\"10000\"></p-confirmDialog>\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>"
        },
        {
            "name": "ProductComponent",
            "id": "component-ProductComponent-775fc0918a253c861e6b1389a2ab493f686d9c9b6fd29cf0c7e7c78e9b26949e1390f0a8b235879d83a28c6242a1b1333351005331330eaac19b4d7a585df7b5",
            "file": "src/app/layout/user/product/product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                },
                {
                    "name": "DialogService"
                }
            ],
            "selector": "app-product",
            "styleUrls": [
                "./product.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "abc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "dataListCart",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "dataPopular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "dialogService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogService",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "responsiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "sortOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "vote",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "addToCart",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "e",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postToCart",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { CartComponent } from './cart/cart.component';\r\n\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { ProductService } from '../../service/product.service';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { ConfirmationService, SelectItem } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css'],\r\n  providers: [MessageService, DialogService]\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  @Input()\r\n  abc: string;\r\n  constructor(\r\n    private productPopular: ProductService,\r\n    private primengConfig: PrimeNGConfig,\r\n    public dialogService: DialogService,\r\n    private confirmationService: ConfirmationService,\r\n    private routes: Router\r\n  ) {\r\n    this.responsiveOptions = [\r\n      {\r\n        breakpoint: '1024px',\r\n        numVisible: 3,\r\n        numScroll: 3\r\n      },\r\n      {\r\n        breakpoint: '768px',\r\n        numVisible: 2,\r\n        numScroll: 2\r\n      },\r\n      {\r\n        breakpoint: '560px',\r\n        numVisible: 1,\r\n        numScroll: 1\r\n      }\r\n    ];\r\n  }\r\n  dataPopular: any[];\r\n  sortOptions: SelectItem[];\r\n  vote: number;\r\n  count = 0;\r\n  dataListCart: any[] = [];\r\n  sortOrder: number;\r\n  responsiveOptions: any;\r\n  message: any;\r\n  sortField: string;\r\n  ref: DynamicDialogRef;\r\n\r\n  ngOnInit(): void {\r\n    this.productPopular.getPopular().subscribe(data => {\r\n      this.dataPopular = data;\r\n      data.map((element: any) => {\r\n        this.vote = (element.vote) / 20;\r\n      });\r\n    });\r\n    this.sortOptions = [\r\n      { label: 'Price High to Low', value: '!price' },\r\n      { label: 'Price Low to High', value: 'price' }\r\n    ];\r\n    this.primengConfig.ripple = true;\r\n    this.productPopular.getCartItem().subscribe(data => {\r\n      this.dataListCart = data.filter((el: any) => el.idUser === localStorage.getItem('token'));\r\n      this.count = this.dataListCart.length;\r\n    });\r\n    this.productPopular.countValue.subscribe((res: any) => {\r\n      this.count = res;\r\n    });\r\n  }\r\n\r\n  onSortChange(event: any): void {\r\n    const value = event.value;\r\n    if (value.indexOf('!') === 0) {\r\n      this.sortOrder = -1;\r\n      this.sortField = value.substring(1, value.length);\r\n    }\r\n    else {\r\n      this.sortOrder = 1;\r\n      this.sortField = value;\r\n    }\r\n  }\r\n\r\n  addToCart(id: number): void {\r\n    if (localStorage.getItem('token') !== null) {\r\n      this.productPopular.getListCart(id).subscribe(data => {\r\n        this.postToCart(data);\r\n      });\r\n    } else {\r\n      this.confirmationService.confirm(\r\n        {\r\n          message: 'Do you want login ?',\r\n          header: 'Confirmation',\r\n          icon: 'pi pi-exclamation-triangle',\r\n          accept: () => {\r\n            this.routes.navigate(['login']);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  postToCart(value: any): void {\r\n    value.id = value.id + (Math.random() * 1);\r\n    value.idUser = localStorage.getItem('token');\r\n    console.log(value);\r\n    this.productPopular.postListCart(value).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.count++;\r\n      },\r\n      err => console.log(err));\r\n  }\r\n\r\n  showCart(): void {\r\n    this.ref = this.dialogService.open(CartComponent, {\r\n      data: {\r\n        data: this.dataListCart,\r\n        count: this.count\r\n      },\r\n      header: 'Choose a Product',\r\n      width: '70%',\r\n      contentStyle: { 'max-height': '500px', overflow: 'auto' },\r\n      baseZIndex: 10000\r\n    });\r\n  }\r\n  e(e: any): void{\r\n    console.log(e);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".product{\r\n\r\n  box-shadow: 0 2px 1px -1px rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 1px 3px 0 rgb(0 0 0 / 12%);\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  margin-bottom: 2rem;\r\n  margin: 0.5rem;\r\n  border: 1px solid #dfe7ef;\r\n}\r\n.product_name{\r\n  height: 42px;\r\n}\r\n.product_img{\r\n  display: flex;\r\n  height: 200px;\r\n  \r\n}\r\n.product_img img{\r\n  margin: auto  ;\r\n  width: 180px;\r\n  box-shadow: 0 3px 6px #00000029, 0 3px 6px #0000003b;\r\n  \r\n}\r\n.title{\r\n\r\n  background: -webkit-linear-gradient(left, rgb(129, 105, 59) , yellow, green, cyan, blue, violet);\r\n  background: -o-linear-gradient(right, rgb(64, 146, 26), yellow, green, cyan, blue, violet);\r\n  background: -moz-linear-gradient(right, orange, yellow, green, cyan, blue, violet);\r\n  background: linear-gradient(to right, rgb(109, 94, 67) , rgb(133, 133, 70), green, cyan, blue, violet);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  border-bottom: 1px outset;\r\n  width: fit-content\r\n}\r\n.p-grid{\r\n  display: inline-flex;\r\n}\r\n.mt-20{\r\n  background-color: #fff;border: none;\r\n}\r\n:host ::ng-deep .p-cart {\r\n  background-color: antiquewhite;\r\n  border: none;\r\n  color:chartreuse\r\n} \r\n:host ::ng-deep .p-cart:hover{\r\n  background-color: aquamarine;\r\n}\r\n.cart_icon{\r\n position: relative;\r\n\r\n}\r\n.cart_icon i {\r\n  font-size:3em; font-weight: 900;\r\n}\r\n.cart_number{\r\n  width: 20px;\r\n  background: darksalmon;\r\n  right: -30%;\r\n  position: absolute;\r\n  margin-right: 0.5rem;\r\n  top: -10%;\r\n  border-radius: 50%;\r\n}\r\n",
                    "styleUrl": "./product.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productPopular",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "productPopular",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routes",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-dataView #dv [value]=\"dataPopular\" [paginator]=\"true\" [rows]=\"6\" filterBy=\"name\" [sortField]=\"sortField\"\r\n  [sortOrder]=\"sortOrder\" layout=\"grid\">\r\n  <ng-template pTemplate=\"header\">\r\n    <div class=\"p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\r\n      <div>\r\n        <p-dropdown [options]=\"sortOptions\" (onChange)=\"onSortChange($event)\" placeholder=\"Sort By Price\"\r\n          styleClass=\"p-mb-2 p-mb-md-0\"></p-dropdown>\r\n      </div>\r\n      <div>\r\n        <span class=\"p-input-icon-left p-mb-2 p-mb-md-0\">\r\n          <i class=\"pi pi-search\"></i>\r\n          <input type=\"search\" (input)=\"dv.filter($event.target.value)\" pInputText placeholder=\"Search by Name\">\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div style=\"margin-bottom: 5px;\">\r\n          <p-button (click)=\"showCart()\" label=\"\" class=\"mt-20\" styleClass=\"p-cart\">\r\n            <div class=\"cart_icon\"><i class=\"pi pi-shopping-cart\"></i>\r\n              <div class=\"cart_number\">{{count}}</div>\r\n            </div>\r\n          </p-button>\r\n        </div>\r\n        <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n      </div>\r\n    </div>\r\n    <h1 class=\"title\">Popular Products</h1>\r\n    <p-carousel [value]=\"dataPopular\" styleClass=\"custom-carousel\" [autoplayInterval]=\"3000\" [numVisible]=\"3\"\r\n      [numScroll]=\"1\" [circular]=\"true\" [responsiveOptions]=\"responsiveOptions\">\r\n      <ng-template pTemplate=\"header\">\r\n\r\n      </ng-template>\r\n      <ng-template let-product pTemplate=\"item\">\r\n        <div class=\"product-item\">\r\n          <div class=\"product-item-content\">\r\n            <div class=\"mb-3 product_img\">\r\n              <img src=\"assets\\images\\{{product.img}}\" [alt]=\"product.name\" class=\"product-image\" />\r\n            </div>\r\n            <div style=\"text-align: center;\">\r\n              <h4 class=\"mb-1\">{{product.name}}</h4>\r\n              <h5 class=\"mt-0 mb-3\">${{product.price}}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </p-carousel>\r\n    <h1 class=\"title\">Selling Products</h1>\r\n  </ng-template>\r\n  <ng-template let-product pTemplate=\"listItem\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"product\">\r\n        <div class=\"product_img\">\r\n          <img src=\"assets\\images\\{{product.img}}\" [alt]=\"\" />\r\n        </div>\r\n        <div class=\"product_name\">\r\n          {{product.name}}\r\n        </div>\r\n        <div class=\"product_price\">\r\n          {{product.price | currency:\"VND\"}}\r\n        </div>\r\n        <p-rating [(ngModel)]=\"vote\" [readonly]=\"true\" [cancel]=\"false\"></p-rating><span>{{product.view}} View</span>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template let-product pTemplate=\"gridItem\" class=\"p-grid\">\r\n    <div class=\"p-md-4 p-sm-12\">\r\n      <div class=\"product\">\r\n        <div class=\"product_img\">\r\n          <img src=\"assets\\images\\{{product.img}}\" [alt]=\"\" />\r\n        </div>\r\n        <div class=\"product_name\">\r\n          {{product.name}}\r\n        </div>\r\n        <div class=\"product_price\">\r\n          {{product.price | currency:\"VND\"}}\r\n        </div>\r\n        <p-rating [(ngModel)]=\"vote\" [readonly]=\"true\" [cancel]=\"false\"></p-rating><span>{{product.view}} view</span>\r\n        <div>\r\n          <p-button label=\"Add\" (click)=\"addToCart(product.id)\" class=\"mt-20\"><span><i\r\n                class=\"pi pi-shopping-cart\"></i></span></p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</p-dataView>\r\n<p-confirmDialog [style]=\"{'width': '50vw', 'font-size':'large'}\" [baseZIndex]=\"10000\"></p-confirmDialog>\r\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>\r\n\r\n<input type=\"checkbox\" (change)=\"e($event)\">\r\n{{abc}}"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-efecbefc7aa53ccf4b4201321d63b9909e279cc9caf0ffd513104b9db94f238535cadc9a802bb58f74759893661f2e006272db17321013c99f61dac380086210",
            "file": "src/app/layout/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formsRegister",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { JwtService } from 'src/app/shared/service/jwt.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  formsRegister: FormGroup\n  constructor(\n    private http: JwtService,\n    private fn: FormBuilder,\n    private router: Router,\n    private mess: MessageService) { }\n\n  ngOnInit(): void {\n    this.formsRegister = this.fn.group({\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      age: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n  register(e: any) {\n    this.http.register(e).subscribe(\n      data => {\n        this.mess.add({ key: 'c', severity: 'success', summary: 'Successful', detail: 'Sign Up Success', life: 3000 })\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 1500);\n      }\n    );\n  }\n  get username() { return this.formsRegister.get('username'); }\n  get password() { return this.formsRegister.get('password'); }\n  get email() { return this.formsRegister.get('email'); }\n  get phone() { return this.formsRegister.get('phone'); }\n  get age() { return this.formsRegister.get('age'); }\n  get address() { return this.formsRegister.get('address'); }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body{\r\n\tmargin:0;\r\n\tcolor:#6a6f8c;\r\n\tbackground:#c8c8c8;\r\n\tfont:600 16px/18px 'Open Sans',sans-serif;\r\n}\r\n\r\n\r\n.login-wrap{\r\n\twidth:100%;\r\n\tmargin:auto;\r\n\tmax-width:525px;\r\n\tmin-height:670px;\r\n\tposition:relative;\r\n\tbackground:url(https://raw.githubusercontent.com/khadkamhn/day-01-login-form/master/img/bg.jpg) no-repeat center;\r\n\tbox-shadow:0 12px 15px 0 rgba(0,0,0,.24),0 17px 50px 0 rgba(0,0,0,.19);\r\n}\r\n.login-html{\r\n\twidth:100%;\r\n\theight:100%;\r\n\tposition:absolute;\r\n\tpadding:35px 70px 50px 70px;\r\n\tbackground:rgba(40,57,101,.9);\r\n}\r\ninput{\r\n\tborder:none;\r\n\tpadding:10px 20px;\r\n\tborder-radius:25px;\r\n\tbackground:rgba(255,255,255,.1);\r\n  color:#fff;\r\n}\r\n.label{\r\n  color:#aaa;\r\n\tfont-size:12px;\r\n}\r\n.group{\r\n  margin: 10px 0;\r\n}\r\nbutton{\r\n  width:100%;\r\n\tcolor:#fff;\r\n\tdisplay:block;\r\n  background-color:#1161ee;\r\n  border:none;\r\n\tpadding:15px 20px;\r\n\tborder-radius:25px;\r\n\r\n}\r\n.validate{\r\n  color:red\r\n}",
                    "styleUrl": "./register.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "username": {
                    "name": "username",
                    "getSignature": {
                        "name": "username",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "",
                        "line": 40
                    }
                },
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                },
                "phone": {
                    "name": "phone",
                    "getSignature": {
                        "name": "phone",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                },
                "age": {
                    "name": "age",
                    "getSignature": {
                        "name": "age",
                        "type": "",
                        "returnType": "",
                        "line": 43
                    }
                },
                "address": {
                    "name": "address",
                    "getSignature": {
                        "name": "address",
                        "type": "",
                        "returnType": "",
                        "line": 44
                    }
                }
            },
            "templateData": "<div class=\"login-wrap\">\n\n  <div class=\"login-html\">\n\n    <h2 style=\"color: aliceblue;\">Sign Up</h2>\n    <div class=\"login-form\">\n      <form [formGroup]=\"formsRegister\" (ngSubmit)=\"register(formsRegister.value)\">\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">USERNAME</label>\n          <input id=\"user\" type=\"text\" pInputText class=\"input p-col-12\" required formControlName=\"username\">\n          <div *ngIf=\"username.invalid && (username.dirty || username.touched)\">\n            <div *ngIf=\"username.errors?.required\" class=\"validate\">\n              Name is required.\n            </div>\n            <div *ngIf=\"username.errors?.minlength\" class=\"validate\">\n              Name must be at least 6 characters long.\n            </div>\n          </div>\n        </div>\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">PASSWORD</label>\n          <input id=\"user\" type=\"password\" pInputText class=\"input p-col-12\" required formControlName=\"password\">\n          <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n            <div *ngIf=\"password.errors?.required\" class=\"validate\">\n              Password is required.\n            </div>\n            <div *ngIf=\"password.errors?.minlength\" class=\"validate\">\n              Password must be at least 6 characters long.\n            </div>\n          </div>\n        </div>\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">EMAIL</label>\n          <input id=\"user\" type=\"text\" pInputText class=\"input p-col-12\" required formControlName=\"email\">\n          <div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n            <div *ngIf=\"email.errors?.required\" class=\"validate\">\n              Email is required.\n            </div>\n          </div>\n        </div>\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">PHONE</label>\n          <input id=\"user\" type=\"text\" pInputText class=\"input p-col-12\" required formControlName=\"phone\">\n          <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\">\n            <div *ngIf=\"phone.errors?.required\" class=\"validate\">\n              Phone is required.\n            </div>\n          </div>\n        </div>\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">AGE</label>\n          <input id=\"user\" type=\"text\" pInputText class=\"input p-col-12\" required formControlName=\"age\">\n          <div *ngIf=\"age.invalid && (age.dirty || age.touched)\">\n            <div *ngIf=\"age.errors?.required\" class=\"validate\">\n              Age is required.\n            </div>\n          </div>\n        </div>\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">ADDRESS</label>\n          <input id=\"user\" type=\"text\" pInputText class=\"input p-col-12\" required formControlName=\"address\">\n          <div *ngIf=\"address.invalid && (address.dirty || address.touched)\">\n            <div *ngIf=\"address.errors?.required\" class=\"validate\">\n              Address is required.\n            </div>\n          </div>\n        </div>\n        <div class=\"group\">\n          <button class=\"button\" type=\"submit\" [disabled]=\"!formsRegister.valid\">SIGN UP</button>\n          <div routerLink=\"/login\" style=\"margin-top: 30px;color: #fff;cursor: pointer;\">\n            <i class=\"pi pi-arrow-left\"></i><span style=\"margin-left: 10px;\">Back</span>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>"
        },
        {
            "name": "UpdateUserComponent",
            "id": "component-UpdateUserComponent-bbd16c49663001de580e0cc3eaccdd8eaa57e2bd8eb090345b658310aab1dd68e0021be058589c0251320c56564952ec6de5ae75d33a569997a26ab0e3ec424c",
            "file": "src/app/layout/admin/list-user/update-user/update-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-update-user",
            "styleUrls": [
                "./update-user.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./update-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "forms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport {ConfirmationService} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { AdminService } from 'src/app/layout/service/admin.service';\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n  user:any\n  forms: FormGroup\n  constructor(public ref: DynamicDialogRef,private fn: FormBuilder,public config: DynamicDialogConfig,private data:AdminService, private confirm:ConfirmationService,private mess:MessageService) { }\n\n  ngOnInit(): void {\n    const  id = this.config.data.id\n    console.log(id);\n    this.data.getUserById(id).subscribe(data=>{\n      console.log(data)\n      \n      this.user = data[0]\n    })\n    this.forms= this.fn.group({\n      username:[],\n      age:[],\n      email:[],\n      phone:[],\n      address:[]\n    })\n  }\n  update(e:any,id){\n    this.confirm.confirm({\n      message: 'Are you sure you want to Update the User?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.data.updateUser(e,id).subscribe(data=>{this.ref.close();})\n        this.mess.add({key: 'c',severity:'success', summary: 'Successful', detail: 'User Update Complete', life: 3000})\n    }\n  })\n   }\n    \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".group{\r\n  width: auto;\r\n}",
                    "styleUrl": "./update-user.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"forms\">\n  <div class=\"form-group \" style=\" font-size:large\">\n    <label for=\"\">Name</label>\n    <div class=\"p-inputgroup group p-col-4  \">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required [ngModel]=\"user?.username\"\n        formControlName=\"username\" placeholder=\"Username\">\n    </div>\n    <label for=\"\">Age</label>\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n      <input class=\"form-control\" pInputText type=\"number\" name=\"name\" required [ngModel]=\"user?.age\"\n        formControlName=\"age\" placeholder=\"Age\">\n    </div>\n    <label for=\"\">Email</label>\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-phone\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required [ngModel]=\"user?.email\"\n        formControlName=\"email\" placeholder=\"Email\">\n    </div>\n    <label for=\"\">Phone</label>\n\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-id-card\"></i></span>\n      <input class=\"form-control\" pInputText type=\"number\" name=\"name\" required [ngModel]=\"user?.phone\"\n        formControlName=\"phone\" placeholder=\"Phone\">\n    </div>\n    <label for=\"\">Address</label>\n\n    <div class=\"p-inputgroup group p-col-4\">\n      <span class=\"p-inputgroup-addon\"><i class=\"pi pi-id-card\"></i></span>\n      <input class=\"form-control\" pInputText type=\"text\" name=\"name\" required [ngModel]=\"user?.address\"\n        formControlName=\"address\" placeholder=\"Address\">\n    </div>\n\n  </div>\n  <p-button type=\"submit\" [disabled]=\"!forms.valid\" (click)=\"update(forms.value,user?.id)\">Update User</p-button>\n</form>"
        },
        {
            "name": "UserPageComponent",
            "id": "component-UserPageComponent-e8bdc5f079843a8836c3fb87e07c0e9ed359e44ca579c535cc8605c82d8c5b4ffe5c2c8dc8c3f0cce302b89e7ac631cd06dc197876ce3c624461b514b806ce8e",
            "file": "src/app/layout/user/user-page/user-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-page",
            "styleUrls": [
                "./user-page.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./user-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datauser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "hide",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "httpOptions",
                    "defaultValue": "{\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "imagePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "text",
                    "defaultValue": "'Log Out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "menu",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "processFile",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {MenuItem} from 'primeng/api';\r\nimport { JwtService } from 'src/app/shared/service/jwt.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AdminService } from '../../service/admin.service';\r\nimport { ProductService } from '../../service/product.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { MessageService } from 'primeng/api';\r\n@Component({\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css'],\r\n\r\n})\r\nexport class UserPageComponent implements OnInit {\r\n  items: MenuItem[];\r\n  text = 'Log Out';\r\n  datauser: any[];\r\n  selectedFile: File;\r\n  imagePath: any;\r\n  url: any;\r\n  hide = true;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/JSON' })\r\n  };\r\n  constructor(\r\n    private auth: JwtService,\r\n    private confirm: ConfirmationService,\r\n    private service: AdminService,\r\n    private productSerive: ProductService,\r\n    private mess: MessageService,\r\n    private http: HttpClient\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    const id = Number(localStorage.getItem('token'));\r\n    this.service.getUserById(id).subscribe(data => {\r\n      this.datauser = data;\r\n      console.log(data);\r\n    }\r\n    );\r\n    this.items = [\r\n      {\r\n      label: 'Persional Information',\r\n      icon: 'pi pi-fw pi-user',\r\n      routerLink: 'information',\r\n      },\r\n      {\r\n      label: 'Purchase order',\r\n      icon: 'pi pi-shopping-cart',\r\n      routerLink: 'orderinformation'\r\n      },\r\n      {\r\n      label: this.text,\r\n      icon: 'pi pi-sign-out',\r\n      }\r\n  ];\r\n}\r\n// tslint:disable-next-line: typedef\r\nmenu(event){\r\n  if(event.target.innerText === this.text){\r\n    this.confirm.confirm({\r\n      message: 'Are you sure you want to Log Out ?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.auth.logout();\r\n      }\r\n    });\r\n  }\r\n}\r\n// tslint:disable-next-line: typedef\r\nprocessFile(e: any) {\r\n\r\n  // tslint:disable-next-line: prefer-const\r\n  const files = e.target.files;\r\n  const reader = new FileReader();\r\n  this.imagePath = files;\r\n  reader.readAsDataURL(files[0]);\r\n  // tslint:disable-next-line: variable-name\r\n  reader.onload = (_event) => {\r\n      this.url = reader.result;\r\n      this.hide = false;\r\n  };\r\n  const id = localStorage.getItem('token');\r\n  this.selectedFile = e.target.files[0];\r\n  const dataImage = {\r\n    image: this.selectedFile.name\r\n  };\r\n  const uploadData = new FormData();\r\n  uploadData.append('myfile', this.selectedFile, this.selectedFile.name);\r\n  this.http.post('http://localhost/angular/uploadAvatar.php', uploadData, {\r\n    reportProgress: true,\r\n    observe: 'events'\r\n  }).subscribe();\r\n  this.productSerive.changeAvt(dataImage, Number(id)).subscribe(\r\n    data => {\r\n      this.mess.add({key: 'c', severity: 'success', summary: 'Success', detail: 'Change Avatar Success'});\r\n    }\r\n  );\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".user_img {\r\n  height: 70px;\r\n}\r\n.user_img img{\r\n  display: block;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  border-radius: 50%;\r\n  border: dashed;\r\n  width: 25%;\r\n}\r\n.user_manu{\r\n  margin-top: 10%;\r\n}\r\n.user_name{\r\n  margin-top: 12%;\r\n  text-align: center;\r\n}\r\n.user_name h3{\r\n  padding: 0;\r\n}\r\n.user_avt {\r\n  display: grid;\r\n}\r\n.user_avt label{\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: crimson\r\n}\r\n.user_avt input{\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid #ccc;\r\n  display: inline-block;\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n}",
                    "styleUrl": "./user-page.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productSerive",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirm",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "AdminService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productSerive",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mess",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"p-grid\">\n  <div class=\"p-col-3\" *ngFor=\"let item of datauser\">\n    <h1 style=\"text-align: center;\">Personal Page</h1>\n    <div class=\"user_img\" *ngIf=\"hide\">\n      <img src=\"assets/user/{{item.image}}\" height=\"100px\" alt=\"\">\n    </div>\n    <div class=\"user_img\" *ngIf=\"!hide\">\n      <img src={{url}} height=\"100px\" alt=\"\">\n    </div>\n    <div class=\"user_name\">\n      <h3>{{item.username}}</h3>\n    </div>\n    <div class=\"user_avt\">\n      <label for=\"\">Change Avatar</label>\n      <input type=\"file\" accept=\"image/*\" (change)=\"processFile($event)\">\n    </div>\n\n    <div class=\"user_manu\">\n      <p-panelMenu [model]=\"items\" [style]=\"{'width':'300px'}\" (click)=\"menu($event)\"></p-panelMenu>\n    </div>\n    <p-confirmDialog [baseZIndex]=\"10000\"></p-confirmDialog>\n  </div>\n  <div class=\"p-col-9\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n<p-toast position=\"top-right\" key=\"c\" [baseZIndex]=\"3000\"></p-toast>"
        }
    ],
    "modules": [
        {
            "name": "AdminModule",
            "id": "module-AdminModule-0a3f6072976f17a8a03ec4ca8a3d00b6a056758a1c8196f32ab829cc2150219d38b852eb92b29a3a8a1cf2febf2e8ba650cdc1cefa4018dd80b81b065fd88c0d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/admin/module/admin.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListProductComponent } from '../list-product/list-product.component';\nimport { HomeComponent } from '../../admin/home/home.component';\nimport { HeaderComponent } from '../../admin/header/header.component';\nimport { ButtonModule } from 'primeng/button';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListUserComponent } from '../list-user/list-user.component'; \nimport { NewsComponent } from '../../admin/news/news.component';\nimport { ManagamentProductComponent } from '../managament-product/managament-product.component';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport {  MessageService } from \"primeng/api\";\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { AddUserComponent } from '../list-user/add-user/add-user.component';\nimport { UpdateUserComponent } from '../list-user/update-user/update-user.component';\nimport {RatingModule} from 'primeng/rating';\nimport {ProgressBarModule} from 'primeng/progressbar';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { AddProductComponent } from '../add-product/add-product.component';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport {HttpClientModule} from '@angular/common/http';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nconst routes: Routes = [\n  {\n    path: '',\n    component:HomeComponent,\n    children:[\n      {\n      path: 'home',\n      component: ListUserComponent,\n      },\n      {\n        path: 'listProduct',\n        component: ListProductComponent,\n      },\n      {\n        path: 'managementProduct',\n        component: ManagamentProductComponent,\n      },\n      {\n        path: 'news',\n        component: NewsComponent,\n      },\n      {\n        path:'addProduct',\n        component: AddProductComponent,\n      },\n    ]\n  },\n]\n\n@NgModule({\n  declarations: [\n    ListProductComponent,\n    HomeComponent,\n    HeaderComponent,\n    ListUserComponent,\n    NewsComponent,\n    ManagamentProductComponent,\n    AddUserComponent,\n    UpdateUserComponent,\n    AddProductComponent\n  ],\n  imports: [\n    CommonModule,\n    PanelMenuModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    TableModule,\n    ButtonModule,\n    MessagesModule,\n    ConfirmDialogModule,\n    DynamicDialogModule,\n    DialogModule,\n    ToastModule,\n    ReactiveFormsModule,\n    RatingModule,\n    ProgressBarModule,\n    InputTextModule,\n    FileUploadModule,\n    HttpClientModule,\n    InputTextareaModule\n  ],\n  providers:[MessageService,  ConfirmationService]\n})\nexport class AdminModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddProductComponent"
                        },
                        {
                            "name": "AddUserComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "ListProductComponent"
                        },
                        {
                            "name": "ListUserComponent"
                        },
                        {
                            "name": "ManagamentProductComponent"
                        },
                        {
                            "name": "NewsComponent"
                        },
                        {
                            "name": "UpdateUserComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-6771db291c244deb91874aff0591afa8fdbc040221690477d42ba4d4545d8a0c42f3e66dec181301f9585373b5e3de5c5caa53f09952ba22e658444962a3ede0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './layout/login/login.component';\r\nimport { RegisterComponent } from './layout/register/register.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { SnowModule } from 'snow';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { AuthGuard } from './shared/guard/auth.guard';\r\nimport { AuthbackLogGuard } from './shared/guard/authback-log.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => \"import('./layout/user/module/user.module').then(m => m.UserModule)\"\r\n  },\r\n  {\r\n    path: 'user',\r\n    loadChildren: () => \"import('./layout/user/module/user.module').then(m => m.UserModule)\"\r\n  },\r\n  {\r\n    path: 'admin',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => \"import('./layout/admin/module/admin.module').then(m => m.AdminModule)\"\r\n  },\r\n  {\r\n    path: 'login',\r\n    canActivate: [AuthbackLogGuard],\r\n    component: LoginComponent,\r\n\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  }\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes),\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ToastModule,\r\n    MessagesModule,\r\n    SnowModule,\r\n    InputTextModule\r\n\r\n  ],\r\n  providers: [MessageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserModule",
            "id": "module-UserModule-bec4eaae3a16dddfaee5b6450ac2f501a6bf0d5b395751cce096c2a9134b99e6eea0b77c82a9276ad570f3d6b65a1cd8b519d5f304ab86516ab650f9a8bca75f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/user/module/user.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {HomeComponent} from '../home/home.component'\r\nimport { HeaderComponent } from '../header/header.component';\r\nimport { ProductComponent } from '../product/product.component';\r\nimport { NewsComponent } from '../news/news.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport {DataViewModule} from 'primeng/dataview';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {RatingModule} from 'primeng/rating';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TableModule } from 'primeng/table'; \r\nimport { CartComponent } from '../product/cart/cart.component';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport {  MessageService } from \"primeng/api\";\r\nimport { OderComponent } from '../oder/oder.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtService } from 'src/app/shared/service/jwt.service';\r\nimport { AuthGuard } from 'src/app/shared/guard/auth.guard';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport {CarouselModule} from 'primeng/carousel';\r\nimport {AvatarModule} from 'primeng/avatar';\r\nimport {AvatarGroupModule} from 'primeng/avatargroup';\r\nimport { UserPageComponent } from '../user-page/user-page.component';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { PersonalInformationComponent } from '../user-page/personal-information/personal-information.component';\r\nimport { OrderInformationComponent } from '../user-page/order-information/order-information.component';\r\nimport { ChangePasswordComponent } from '../user-page/personal-information/change-password/change-password.component';\r\nimport { DetailNewsComponent } from '../news/detail-news/detail-news.component';\r\nimport {PaginatorModule} from 'primeng/paginator';\r\nimport { PersonalComponent } from '../oder/personal/personal.component';\r\nimport { PaymentComponent } from '../oder/payment/payment.component';\r\nimport { ConfirmComponent } from '../oder/confirm/confirm.component';\r\nimport { CardModule } from 'primeng/card';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n      path: 'home',\r\n      component: ProductComponent,\r\n      },\r\n      {\r\n        path: 'news',\r\n        component: NewsComponent,\r\n      },\r\n      {\r\n        path: 'detail',\r\n        component: DetailNewsComponent\r\n      },\r\n      {\r\n        path: 'order',\r\n        canActivate: [AuthGuard],\r\n        component: OderComponent,\r\n        children: [\r\n        {\r\n          path: 'personal',\r\n          component: PersonalComponent\r\n        },\r\n        {\r\n          path: 'payment',\r\n          component: PaymentComponent\r\n        },\r\n        {\r\n          path: 'confirmation',\r\n          component: ConfirmComponent\r\n        }\r\n      ]\r\n      },\r\n      {\r\n        path: 'user',\r\n        canActivate: [AuthGuard],\r\n        component: UserPageComponent,\r\n        children: [\r\n          {\r\n            path: 'information',\r\n            component: PersonalInformationComponent\r\n          },\r\n          {\r\n            path: 'orderinformation',\r\n            component: OrderInformationComponent\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [\r\n    CartComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    NewsComponent,\r\n    ProductComponent,\r\n    OderComponent,\r\n    UserPageComponent,\r\n    PersonalInformationComponent,\r\n    OrderInformationComponent,\r\n    ChangePasswordComponent,\r\n    DetailNewsComponent,\r\n    PersonalComponent,\r\n    PaymentComponent,\r\n    ConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    MenubarModule,\r\n    DataViewModule,\r\n    DropdownModule,\r\n    InputTextModule,\r\n    RatingModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    DynamicDialogModule,\r\n    DialogModule,\r\n    ToastModule,\r\n    TableModule,\r\n    MessagesModule,\r\n    ConfirmDialogModule,\r\n    ReactiveFormsModule,\r\n    StepsModule,\r\n    CarouselModule,\r\n    AvatarModule,\r\n    AvatarGroupModule,\r\n    PanelMenuModule,\r\n    PaginatorModule,\r\n    CardModule\r\n  ],\r\n  providers:[ConfirmationService,MessageService,JwtService,AuthGuard]\r\n})\r\nexport class UserModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "JwtService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CartComponent"
                        },
                        {
                            "name": "ChangePasswordComponent"
                        },
                        {
                            "name": "ConfirmComponent"
                        },
                        {
                            "name": "DetailNewsComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "NewsComponent"
                        },
                        {
                            "name": "OderComponent"
                        },
                        {
                            "name": "OrderInformationComponent"
                        },
                        {
                            "name": "PaymentComponent"
                        },
                        {
                            "name": "PersonalComponent"
                        },
                        {
                            "name": "PersonalInformationComponent"
                        },
                        {
                            "name": "ProductComponent"
                        },
                        {
                            "name": "UserPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "abc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/product/product.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Border",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/product.storis.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/product.storis.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProductComponent>",
                "defaultValue": "(args: ProductComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/product/product.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProductComponent>",
                "defaultValue": "(args: ProductComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/product/product.stories.ts": [
                {
                    "name": "abc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/product/product.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/product/product.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProductComponent>",
                    "defaultValue": "(args: ProductComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/button/Button.stories.ts": [
                {
                    "name": "Border",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/input/input.stories.ts": [
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/product.storis.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/product.storis.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/product.storis.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProductComponent>",
                    "defaultValue": "(args: ProductComponent) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "kind": "component",
                "component": "LoginComponent",
                "path": "login"
            },
            {
                "kind": "component",
                "component": "RegisterComponent",
                "path": "register"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/add-product/add-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/list-product/list-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/list-user/add-user/add-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/list-user/list-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/list-user/update-user/update-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/managament-product/managament-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManagamentProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/admin/news/news.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/service/admin.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AdminService",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/service/product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/news/detail-news/detail-news.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailNewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/news/news.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/oder/confirm/confirm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/oder/oder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/oder/payment/payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/oder/personal/personal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/product/cart/cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/product/product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/user-page/order-information/order-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrderInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/user-page/personal-information/change-password/change-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangePasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/user-page/personal-information/personal-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/user/user-page/user-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guard/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guard/authback-log.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthbackLogGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/service/jwt.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "JwtService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Border",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 66,
                "coverageCount": "4/6",
                "status": "good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/product.storis.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/product.storis.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/product/product.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "abc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/product/product.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}